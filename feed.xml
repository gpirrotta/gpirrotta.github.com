<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.0">Jekyll</generator><link href="http://giovanni.pirrotta.it/feed.xml" rel="self" type="application/atom+xml" /><link href="http://giovanni.pirrotta.it/" rel="alternate" type="text/html" /><updated>2018-05-17T18:50:51+00:00</updated><id>http://giovanni.pirrotta.it/</id><title type="html">Giovanni Pirrotta</title><author><name>Giovanni Pirrotta</name></author><entry><title type="html">Protezione Civile POP: crea gli avvisi di allerta della tua città</title><link href="http://giovanni.pirrotta.it/blog/2018/05/17/protezione-civile-pop/" rel="alternate" type="text/html" title="Protezione Civile POP: crea gli avvisi di allerta della tua città" /><published>2018-05-17T01:40:08+00:00</published><updated>2018-05-17T01:40:08+00:00</updated><id>http://giovanni.pirrotta.it/blog/2018/05/17/protezione-civile-pop</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2018/05/17/protezione-civile-pop/">&lt;p&gt;Dal 5 marzo di quest’anno il &lt;a href=&quot;http://www.protezionecivile.gov.it/&quot; target=&quot;blank&quot;&gt;Dipartimento della Protezione Civile&lt;/a&gt; 
pubblica sul proprio &lt;a href=&quot;http://www.protezionecivile.gov.it/jcms/it/bollettini_di_criticita.wp&quot; target=&quot;blank&quot;&gt;sito&lt;/a&gt; i bollettini di criticità 
nazionale e di allerta in formato xml, shape, csv e pdf. &lt;strong&gt;C’è di più!&lt;/strong&gt; Dopo circa un mese gli stessi dati sono stati rilasciati con licenza aperta, cioè riutilizzabili liberamente in altri contesti.
&lt;!--More--&gt;&lt;/p&gt;

&lt;p&gt;Già in un mio precedente &lt;a href=&quot;http://giovanni.pirrotta.it/blog/2017/12/20/del-riutilizzo-dei-dati-meteo-ai-tempi-dei-borboni/&quot; target=&quot;blank&quot;&gt;post&lt;/a&gt;
ho raccontato come aprire i dati della &lt;a target=&quot;blank&quot; href=&quot;http://www.regione.sicilia.it/presidenza/protezionecivile/&quot;&gt;Protezione Civile&lt;/a&gt; della Regione Siciliana 
a partire dai bollettini PDF che pubblicavano ogni giorno sul loro sito.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/bollettino.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Con la pubblicazione in opendata dei dati della protezione civile su scala nazionale il cambio di passo
 è davvero notevole e diventa realistico progettare importanti servizi digitali che siano sostenibili e a beneficio dei cittadini.&lt;/p&gt;

&lt;p&gt;Stimolato anche dall’amico &lt;a target=&quot;blank&quot; href=&quot;https://twitter.com/aborruso&quot;&gt;Andrea Borruso&lt;/a&gt;, che già aveva scritto 
un &lt;a href=&quot;http://blog.ondata.it/i-nuovi-bollettini-di-allerta-della-protezione-civile-sono-opendata/&quot; target=&quot;blank&quot;&gt;post&lt;/a&gt; 
sulla pubblicazione di questi dati,&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/borruso.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;vediamo come ottenere una maggiore flessibilità e facilità di accesso.&lt;/p&gt;

&lt;p&gt;Sin da subito, tuttavia, noto alcune criticità.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I link ai dati non sono univoci; una parte del link è costituita dal giorno di rilascio a cui vengono aggiunti 4 numeri random. Sarà l’orario di rilascio??? Non è dato sapere. 
Ne segue che per estrarre il link dovrò ricorrere allo &lt;em&gt;scraping&lt;/em&gt;, purtroppo :-(&lt;/li&gt;
  &lt;li&gt;I link ai vari formati disponibili (xml, pdf, shp) in realtà rimandano a un file &lt;strong&gt;zip&lt;/strong&gt;, all’interno del quale si trovano i dati della protezione civile, che non è proprio
il massimo per accedere programmaticamente al dato.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I dati dovrebbero invece essere esposti in modo da garantire il massimo livello di flessibilità, secondo un formato standard e strutturato,  in grado
 di filtrare i dati da consumare secondo le proprie specifiche necessità.&lt;/p&gt;

&lt;p&gt;Uno dei modi più semplici e facili per accedere a dati su Webva è tramite &lt;strong&gt;API&lt;/strong&gt; dedicate in formato &lt;strong&gt;JSON&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;JSON (JavaScript Object Notation) è un formato aperto, semplice e adatto alla memorizzazione di informazioni e ai trasferimenti di dati dal client al server o viceversa.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/json.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Per la varietà di ambiti di applicazione, oltre al formato JSON, scelgo di esporre anche i dati in formato &lt;strong&gt;RSS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;RSS è uno dei più popolari formati per la distribuzione di contenuti Web; è basato su XML, da cui ha ereditato la semplicità, l’estensibilità e la flessibilità. 
Attraverso particolare software chiamati &lt;strong&gt;feedreader&lt;/strong&gt; è possibile convogliare tutti i feed di interesse in un’unica applicazione (Web, standalone o mobile) in modo da avere in un unico punto le informazioni di tutti i siti di interesse senza doverli visitare manualmente ad uno ad uno.&lt;/p&gt;

&lt;p&gt;Inoltre gli RSS si integrano in modo naturale con una serie di applicazioni, servizi e tool online con i quali è possibile creare nuovi servizi.
Il servizio &lt;a href=&quot;https://ifttt.com&quot; target=&quot;blank&quot;&gt;IFTTT&lt;/a&gt;, ad esempio, è  in grado di agganciare un 
feed RSS a tantissimi altri servizi: social newtork, app di instant messaging, email, applicazioni di domotica in grado di accendere lampade, aprire finestre, avviare elettrodomestici e tanto altro.&lt;/p&gt;

&lt;p&gt;Immaginate una lampada che cambia colore a seconda del colore dell’allerta meteo del giorno successivo ricordandovi ad esempio di lavare e stendere i panni oggi perchè domani sono
previsti forti temporali. E che automaticamente disattiva l’irrigazione del giardino per il giorno successivo riattivandosi successivamente in assenza di allerta.
Questi sono solo alcuni esempi di applicazioni &lt;em&gt;potenzialmente&lt;/em&gt; realizzabili grazie al riutilizzo dei dati della Protezione Civile, riusabili perchè &lt;strong&gt;opendata&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/rss-to-social.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una volta deciso il formato da esporre voglio poter accedere ai dati in modo da personalizzare la mia richiesta in base  all’uso che ne devo fare, secondo le seguenti caratteristiche:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;le informazioni devono riferirsi alla città in cui vivo o di cui mi interessa sapere le previsioni;&lt;/li&gt;
  &lt;li&gt;devo poter scegliere la tipologia di rischio (idraulico, idrogeologico e temporali) di cui mi interessano le informazioni;&lt;/li&gt;
  &lt;li&gt;devo poter scegliere il livello minimo di allerta, tra verde, gialla, arancione e rossa (vedi figura);&lt;/li&gt;
  &lt;li&gt;devo poter scegliere se mi interessano le previsioni del giorno corrente o del giorno successivo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/legenda.jpg&quot; width=&quot;35%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Iniziamo dal primo punto.&lt;/p&gt;

&lt;p&gt;Il Bollettino di criticità nazionale/allerta della Protezione Civile segnala la valutazione dei livelli di criticità/allerta idraulica, 
per temporali e idrogeologica mediamente attesi fino alle 24.00 del giorno di emissione e nelle 24 ore del giorno successive 
sulle &lt;strong&gt;156 zone di allerta&lt;/strong&gt; (vedi figura) in cui è suddiviso il territorio italiano. Il documento viene pubblicato ogni giorno, di norma, alle 16.00.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/zone-italia.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le zone definite dalla Protezione Civile non combaciano con le province italiane per cui il primo problema da risolvere è individuare la zona di appartenenza di ciascuna città italiana.
Per fare questo utilizzo il seguente script &lt;strong&gt;python&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;shapefile&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;shapely.geometry&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; 
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;shapely.geometry&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt; 
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;csv&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Apro il formato shape dei dati&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;shp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapefile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data/20180502_1615_today'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;# leggo tutti i poligoni&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;all_shapes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;# e tutte le informazioni associate ai poligoni&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;all_records&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# ottengo il numero dei poligoni&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;len_shapes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all_shapes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# inizializzo un file CSV in scrittura&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ofile&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'comuni-con-zone.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delimiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quotechar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&quot;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quoting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QUOTE_NONNUMERIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# il file comuni.csv contiene tutte le città italiane con le relative latitudini e longitudini&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;comuni.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        
        &lt;span class=&quot;c&quot;&gt;# la prima riga la salto perchè è l'header&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'zona_protezione_civile'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writerow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# per ogni città mi creo un oggetto Point a cui passo&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# nel costruttore la latitudine e la longitudine&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            
            &lt;span class=&quot;c&quot;&gt;# devo capire dentro quale shape si trova il punto &lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# per cui ciclo su tutti i poligoni della protezione civile    &lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len_shapes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# leggo il poligono i-esimo&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;boundary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all_shapes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; 
                
                &lt;span class=&quot;c&quot;&gt;# se il punto, cioè la città, si trova dentro il poligono&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;within&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boundary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;  
                    &lt;span class=&quot;c&quot;&gt;# aggiungo la zona alla riga&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;# e la salvo in un nuovo file CSV&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writerow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Alla fine dello script verrà creato un nuovo file CSV chiamato &lt;em&gt;comuni-con-zone.csv&lt;/em&gt; identico al file di partenza &lt;em&gt;comuni.csv&lt;/em&gt; con in più la colonna &lt;strong&gt;zona&lt;/strong&gt; della Protezione Civile per ogni città.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/csv-zone.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Questa è la parte più difficile di tutta l’applicazione. Una volta estratte le zone di ogni città il passo è breve. Nello stesso zip che contiene il formato SHP dei dati
sono presenti due file CSV contenenti le previsioni della protezione civile del giorno stesso e del giorno successivo, le tipologie di rischio e il livello di allerta. 
Sempre con uno script python leggo questi dati, li organizzo secondo le mie necessità e li salvo banalmente su un db mysql. 
Quest’ultimo script lo collego ad un &lt;em&gt;job cron&lt;/em&gt; che quotidianamente mi aggiornerà i dati del db.&lt;/p&gt;

&lt;p&gt;La parte dell’applicazione relativa alla &lt;em&gt;data integration&lt;/em&gt; è conclusa. Vediamo adesso come implementare la &lt;strong&gt;web-application&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Per generare la richiesta API e il feed RSS viene sviluppata un’interfaccia Web in grado di configurare le opzioni in modo da massimizzarne la flessibilità.&lt;/p&gt;

&lt;p&gt;Secondo i seguenti parametri API:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/parametri-api.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Di seguito come appare l’interfaccia Web.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/protezionecivilepop2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La &lt;strong&gt;web-application&lt;/strong&gt;, di fatto un configuratore delle API, è di utilizzo immediato.&lt;br /&gt;
 Basta scegliere la città di interesse, il rischio, la soglia minima di allerta, il giorno di interesse, il formato e il gioco è fatto!&lt;/p&gt;

&lt;h3 id=&quot;flusso-json&quot;&gt;Flusso JSON&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/json-output.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/json-terme.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;feed-rss&quot;&gt;Feed RSS&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/rss-output.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivilerss/rss-terme.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;N.B.&lt;/strong&gt; Con la scelta della soglia minima di allerta il flusso verrà generato solo se l’allerta è maggiore o uguale a quella scelta.
Per cui, se l’allerta scelta è quella &lt;strong&gt;arancione&lt;/strong&gt;, il flusso conterrà eventuali allerte arancioni e rosse ma  non bianche e gialle.&lt;/p&gt;

&lt;p&gt;L’applicazione si trova al seguente indirizzo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.protezionecivilepop.tk&quot; target=&quot;blank&quot;&gt;Protezione Civile POP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nei prossimi post vedremo come agganciare i feed RSS ad altri servizi esterni, come ad esempio Facebook, Twitter e Telegram.&lt;/p&gt;

&lt;p&gt;Se questo progetto ti è piaciuto, mi aiuti a farlo conoscere con un 
&lt;a href=&quot;http://twitter.com/share?url=http://www.protezionecivilepop.tk&amp;amp;text=Protezione+Civile+POP+:+crea+gli+avvisi+di+allerta+della+tua+città+@gpirrotta&quot;&gt;tweet&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Per consigli, feedback, suggerimenti, bug potete inserire una &lt;strong&gt;issue&lt;/strong&gt; su &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/gpirrotta/protezionecivilepop/issues&quot;&gt;questo repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Grazie!&lt;/p&gt;

&lt;p&gt;That’s all folks! Stay tuned!&lt;/p&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">Dal 5 marzo di quest’anno il Dipartimento della Protezione Civile pubblica sul proprio sito i bollettini di criticità nazionale e di allerta in formato xml, shape, csv e pdf. C’è di più! Dopo circa un mese gli stessi dati sono stati rilasciati con licenza aperta, cioè riutilizzabili liberamente in altri contesti.</summary></entry><entry><title type="html">VisualCAD: la mappa interattiva della storia del CAD</title><link href="http://giovanni.pirrotta.it/blog/2018/02/09/visualcad-la-mappa-interattiva-della-storia-del-cad/" rel="alternate" type="text/html" title="VisualCAD: la mappa interattiva della storia del CAD" /><published>2018-02-09T01:40:08+00:00</published><updated>2018-02-09T01:40:08+00:00</updated><id>http://giovanni.pirrotta.it/blog/2018/02/09/visualcad-la-mappa-interattiva-della-storia-del-cad</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2018/02/09/visualcad-la-mappa-interattiva-della-storia-del-cad/">&lt;p&gt;Il Codice dell’Amministrazione Digitale (&lt;strong&gt;CAD&lt;/strong&gt;) è il testo normativo di riferimento 
della pubblica amministrazione che disciplina il processo di digitalizzazione
dell’attività amministrativa.
Da più di un decennio il CAD, cioè il &lt;a href=&quot;http://www.normattiva.it/uri-res/N2Ls?urn:nir:stato:decreto.legislativo:2005-03-07;82&quot; target=&quot;blank&quot;&gt;decreto legislativo n.82 del 7/3/2005&lt;/a&gt;, viene sistematicamente
&lt;em&gt;bistrattato&lt;/em&gt; a colpi di leggi, decreti legislativi e decreti legge, come un vestito continuamente rattoppato
 a suon di taglia e cuci, a discapito delle povere pubbliche amministrazioni che hanno il compito di attuare 
 le disposizioni normative.
Dal testo originario del 2005, tra piccole e grandi modifiche,
si sono succeduti ben 29 aggiornamenti.
Ad ogni aggiornamento, per poter leggere il testo coordinato, è necessario apportare all’ultima versione del CAD
tutte le modifiche previste dall’aggiornamento normativo.
Paragonando quest’operazione al mondo informatico, potremmo dire che l’operazione effettuata è un
 &lt;strong&gt;merge&lt;/strong&gt; di un &lt;em&gt;fix&lt;/em&gt; o di una nuova &lt;em&gt;feature&lt;/em&gt; nella &lt;strong&gt;codebase&lt;/strong&gt; di un software.&lt;/p&gt;

&lt;!--More--&gt;
&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/visualcad/cad.jpg&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ed è proprio da quest’idea di &lt;em&gt;merging&lt;/em&gt; documentale che sono partito per riflettere sulla possibilità di
considerare i testi normativi alla stregua di codici sorgente e di poter utilizzare i tool a disposizione per il versionamento
del software, ad esempio &lt;strong&gt;Git&lt;/strong&gt; ma anche &lt;strong&gt;Subversion&lt;/strong&gt; o &lt;strong&gt;Mercurial&lt;/strong&gt;, per tenere traccia di tutte le modifiche
che avvengono fra le versioni delle leggi.&lt;/p&gt;

&lt;p&gt;Quest’idea in realtà non è nuova. Da diversi anni esistono dei progetti che supportano l’utilizzo
di strumenti che, anche se nati per il mondo software, consentono sia
di versionare i documenti normativi sia di far interagire i cittadini con i proponenti la legge,
mettendoli in condizione di fornire feedback, consigli, critiche e/o spunti di miglioramento. 
E’ un esempio il progetto &lt;a href=&quot;https://github.com/bundestag/gesetze&quot; target=&quot;blank&quot;&gt;Bundes-Git&lt;/a&gt; che
raccoglie in un repository &lt;strong&gt;git&lt;/strong&gt; le leggi e i regolamenti federali tedeschi in &lt;a href=&quot;https://it.wikipedia.org/wiki/Markdown&quot; target=&quot;blank&quot;&gt;markdown&lt;/a&gt;,
cioè usando un formato in grado di migliorare la leggibilità e la fruibilità per gli utenti finali.&lt;/p&gt;

&lt;p&gt;Anche in Italia, in occasione del referendum costituzionale del 2016, c’è stato chi
ha pensato bene di &lt;a href=&quot;https://github.com/pmontrasio/costituzione&quot; target=&quot;blank&quot;&gt;versionare&lt;/a&gt; 
la costituzione corrente con quella che sarebbe stata se fosse passato il referendum confermativo.&lt;/p&gt;

&lt;p&gt;Ritornando al CAD, a fine gennaio avevo quindi intenzione di creare un repository &lt;strong&gt;git&lt;/strong&gt; e caricare
tutte le versioni del CAD, naturalmente con &lt;strong&gt;commit&lt;/strong&gt; diversi, per consentire sia la lettura 
del decreto legislativo  su piattaforme online di versionamento, come ad esempio
&lt;a target=&quot;blank&quot; href=&quot;https://www.github.com&quot;&gt;github&lt;/a&gt;,
sia per tenere traccia delle modifiche di capi, titoli, articoli e commi e poter fare confronti tra le varie 
versioni. Successivamente avevo intenzione di creare una mappa dell’intero decreto, in grado di fornire
all’utente il quadro generale non solo della versione corrente del CAD ma anche di tutte le precedenti.&lt;/p&gt;

&lt;p&gt;Per reperire il testo delle varie versioni ho riciclato e fixato in alcune parti un vecchissimo scraper, 
sviluppato più di 4 anni fa per un progettino didattico, in grado
 di estrarre dati da &lt;strong&gt;normattiva.it&lt;/strong&gt; e di creare
un file JSON con &lt;em&gt;capi&lt;/em&gt;, &lt;em&gt;sezioni&lt;/em&gt;, &lt;em&gt;articoli&lt;/em&gt;, &lt;em&gt;versioni&lt;/em&gt;, &lt;em&gt;testi&lt;/em&gt;, &lt;em&gt;aggiornamenti&lt;/em&gt;, &lt;em&gt;vigenze&lt;/em&gt;,
&lt;em&gt;riferimenti normativi&lt;/em&gt; del CAD.&lt;/p&gt;

&lt;p&gt;Il file estratto lo potete trovare &lt;a target=&quot;blank&quot; href=&quot;http://giovanni.pirrotta.it/images/cad_scraped.json&quot;&gt;qui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Era fine gennaio dicevo (&lt;em&gt;cioè due settimane fa&lt;/em&gt;), avevo generato il file e accantonato il progetto per qualche settimana intendendo ritornarvi appena avessi avuto un pò più
di tempo libero quando, ad un tratto…un fulmine a ciel sereno.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/visualcad/tweet.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il &lt;a href=&quot;https://twitter.com/teamdigitaleIT&quot; target=&quot;blank&quot;&gt;team digitale&lt;/a&gt; di &lt;a href=&quot;https://twitter.com/diegopia&quot; target=&quot;blank&quot;&gt;Diego Piacentini&lt;/a&gt; 
carica su &lt;a href=&quot;&quot; target=&quot;blank&quot;&gt;github&lt;/a&gt; tutte le versioni del CAD andando
a realizzare &lt;strong&gt;esattamente&lt;/strong&gt; quello che avevo in mente io. Non solo. Rilasciano il CAD
in formato &lt;a href=&quot;https://it.wikipedia.org/wiki/ReStructuredText&quot; target=&quot;blank&quot;&gt;reStrucredText&lt;/a&gt;, 
collegano il repository al servizio di documentazione online 
&lt;a href=&quot;https://readthedocs.org/&quot; target=&quot;blank&quot;&gt;readthedocs&lt;/a&gt;
migliorando  di molto l’esperienza di leggibilità, con in più la possibilità
 di confrontare le versioni, articolo per articolo, direttamente su 
 &lt;a href=&quot;https://github.com/italia/cad-docs/compare/v2016-08-26...v2017-12-13&quot; target=&quot;blank&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Questa la mia reazione&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/visualcad/cereal.png&quot; width=&quot;40%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;M’avete fregato sul tempo…A Piacentì, A Team Digitale…‘ve possino!!!&lt;/em&gt;  &lt;strong&gt;se scherza eh ;-)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Raccolgo quatto quatto i cocci del mio progetto originale, accuso il colpo ma non demordo.
Naufragata la parte relativa alla pubblicazione delle leggi su github
mi concentro sulla seconda parte, cioè la realizzazione di una mappa in grado di visualizzare e interagire 
interattivamente con tutte le versioni del CAD.&lt;/p&gt;

&lt;p&gt;Giro un pò in rete per prendere ispirazione su progetti di mappe e mi innamoro di quello realizzato nel 2012  da
&lt;a href=&quot;http://driven-by-data.net/&quot; target=&quot;blank&quot;&gt;Gregor Aisch&lt;/a&gt; (CTO di datawrapper) per le 
&lt;a href=&quot;http://visualisiert.net/parteiengesetz/&quot; target=&quot;blank&quot;&gt; leggi tedesche&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Decido quindi di riusarlo, estenderlo ed adattarlo al CAD.&lt;/p&gt;

&lt;p&gt;Invece di partire però dal file JSON estratto con lo scraper, i cui dati non sono opendata ma
sono &lt;a href=&quot;http://www.normattiva.it/static/legal.html&quot; target=&quot;blank&quot;&gt;licenziati&lt;/a&gt; in modo da non consentirne il riuso per fini commerciali, 
decido di riutilizzare invece i dati del &lt;strong&gt;team-digitale&lt;/strong&gt;, che sono invece opendata licenziati dalla bellissima &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot; target=&quot;blank&quot;&gt;CC0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Nasce quindi il progetto &lt;strong&gt;VisualCAD&lt;/strong&gt;, la mappa interattiva della storia del CAD.
Per la prima volta (che io sappia) è possibile fotografare 
tutta la storia del Codice dell’Amministrazione Digitale in un’unica infografica.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/visualcad/visualcad-big.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dalla prima versione del 2005 si sono succeduti ben &lt;strong&gt;29 aggiornamenti&lt;/strong&gt; e in 
 &lt;strong&gt;VisualCAD&lt;/strong&gt; vengono rappresentati su colonne diverse.
I quadratini corrispondono ai singoli articoli e il colore, come mostrato in legenda, ne evidenzia l’eventuale modifica, aggiunta, abrogazione
effettuata dalla normativa specificata in alto alla colonna.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/visualcad/legenda.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dalla tendina è possibile selezionare ciascun articolo per ricostruire tutto l’iter di modifiche subito dallo
stesso dalla prima versione sino all’ultima.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/visualcad/singoloiter.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;E’ inoltre possibile effettuare ricerche testuali nel titolo degli articoli inserendo del testo libero nel form relativo.&lt;/p&gt;

&lt;p&gt;Passando col mouse sopra gli articoli viene visualizzato un breve estratto del testo e, nel caso di 
articolo modificato, viene mostrato il nuovo testo in verde e il testo rimosso in rosso.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/visualcad/articolomodificato.png&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cliccando su ciascun quadratino è possibile infine visualizzare l’intero corpo dell’articolo e, cliccando sull’apposito pulsantino, evidenziare
 il testo modificato.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/visualcad/modal.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;L’obiettivo è stato raggiunto.&lt;/p&gt;

&lt;p&gt;In un’unica schermata è possibile navigare tutto il CAD con tutti i suoi aggiornamenti, in modo semplice, interattivo
e fruibile da qualsiasi cittadino.&lt;/p&gt;

&lt;p&gt;L’evoluzione di questo progetto potrebbe essere la creazione di nuove mappe per altre leggi partendo ad esempio dal file JSON &lt;em&gt;scrapato&lt;/em&gt;,
in attesa che &lt;em&gt;normattiva&lt;/em&gt; licenzi i dati in &lt;strong&gt;opendata&lt;/strong&gt; e rilasci delle API per interrogare l’archivio delle leggi in modo flessibile.
Sogno o utopia?&lt;/p&gt;

&lt;p&gt;Ritornando al progetto, questo è il &lt;a href=&quot;http://www.visualcad.it&quot; target=&quot;blank&quot;&gt;sito&lt;/a&gt; di riferimento di VisualCAD.
All’apertura potreste attendere un pò di secondi perchè i dati da caricare sono tanti.&lt;/p&gt;

&lt;p&gt;Se questo progetto vi è piaciuto, mi aiutate a farlo conoscere con un 
&lt;a href=&quot;http://twitter.com/share?url=http://www.visualcad.it&amp;amp;text=VisualCAD+-+la+mappa+online+e+interattiva+della+storia+del+CAD.+Perchè+anche+l'occhio+vuole+la+sua+parte!+@gpirrotta&quot;&gt;tweet&lt;/a&gt;? 
Grazie!&lt;/p&gt;

&lt;p&gt;E comunque, a parte gli scherzi,  &lt;strong&gt;grazie&lt;/strong&gt; mille a tutta la squadra del Team Digitale!&lt;/p&gt;

&lt;p&gt;Commenti, critiche e suggerimenti sono i benvenuti!&lt;/p&gt;

&lt;p&gt;That’s all folks! Stay tuned!&lt;/p&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">Il Codice dell’Amministrazione Digitale (CAD) è il testo normativo di riferimento della pubblica amministrazione che disciplina il processo di digitalizzazione dell’attività amministrativa. Da più di un decennio il CAD, cioè il decreto legislativo n.82 del 7/3/2005, viene sistematicamente bistrattato a colpi di leggi, decreti legislativi e decreti legge, come un vestito continuamente rattoppato a suon di taglia e cuci, a discapito delle povere pubbliche amministrazioni che hanno il compito di attuare le disposizioni normative. Dal testo originario del 2005, tra piccole e grandi modifiche, si sono succeduti ben 29 aggiornamenti. Ad ogni aggiornamento, per poter leggere il testo coordinato, è necessario apportare all’ultima versione del CAD tutte le modifiche previste dall’aggiornamento normativo. Paragonando quest’operazione al mondo informatico, potremmo dire che l’operazione effettuata è un merge di un fix o di una nuova feature nella codebase di un software.</summary></entry><entry><title type="html">Del riutilizzo dei dati meteo ai tempi dei Borboni</title><link href="http://giovanni.pirrotta.it/blog/2017/12/20/del-riutilizzo-dei-dati-meteo-ai-tempi-dei-borboni/" rel="alternate" type="text/html" title="Del riutilizzo dei dati meteo ai tempi dei Borboni" /><published>2017-12-20T01:40:08+00:00</published><updated>2017-12-20T01:40:08+00:00</updated><id>http://giovanni.pirrotta.it/blog/2017/12/20/del-riutilizzo-dei-dati-meteo-ai-tempi-dei-borboni</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2017/12/20/del-riutilizzo-dei-dati-meteo-ai-tempi-dei-borboni/">&lt;p&gt;Tutto ebbe inizio un giorno quando, di buon mattino, in un vecchio baule antico della mia soffitta, ritrovai un vecchio manoscritto
di racconti intitolato “&lt;em&gt;Digital Fabulas&lt;/em&gt;”, la cui prima pagina recitava:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Questa è la storia di &lt;strong&gt;Ioan Pairot&lt;/strong&gt;, squattrinato maniscalco siciliano, che ebbe la cattiva sorte
di vivere secoli or sono alla corte di un potente signorotto palermitano.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Il primo dei racconti iniziava così:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Galeotta fu la telefonata col conte Andreas de los Bash, nobile discendente della casata dei Borrusi,
di origine borbonica, insediatasi a Palermo all’inizio del XIX secolo lamentante di non trovare
sul situs Webus della Protezione Civilis dell’isola Trinacria notitia circa lo tempo previstus del giorno appresso
in forma tal da essere riusata in posti altri da quel situs poco apertus.&lt;/em&gt;
  &lt;em&gt;Maniscalco scapestrato qual ero, nulla potei replicare all’illustre conte, ma il pensier
turbò quella mia notte insonne e mi accompagnò fin al mattino.
E infin cedetti per lo sfinimento, per appagar del conte il desiderio e ritornar a dormir la notte,
quieto e libero da pensier molesti a oltranza.&lt;/em&gt;&lt;/p&gt;

&lt;!--More--&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivile/sicilia-storica.jpg&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Per una migliore comprensione del racconto d’ora in avanti tradurrò la storia in lingua moderna.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;dal-diario-di-ioan-pairot&quot;&gt;Dal diario di Ioan Pairot&lt;/h4&gt;

&lt;p&gt;[…] Il conte Andreas mi informò che la Protezione Civile siciliana pubblicava quotidinamente, sul proprio situs ipertestuales (&lt;em&gt;oggi lo chiameremmo sito o pagina Web&lt;/em&gt;),
il dispaccio delle allerte dei rischi idrogeologici (&lt;em&gt;oggi lo chiameremmo report o bollettino&lt;/em&gt;) dell’intera regione in un formato file chiamato &lt;strong&gt;OCD&lt;/strong&gt; (&lt;em&gt;oggi lo chiameremmo PDF&lt;/em&gt;).
Tale formato, purtroppo, impediva la possibilità di riusare le preziose informazioni del bollettino in contesti diversi da quello originale e il conte, desideroso di
 manipolare quei dati, mi intimò di trovare una soluzione al problema.&lt;/p&gt;

&lt;p&gt;Conoscendo la sua ira funesta la notte non chiusi occhio ma, alle prime luci dell’alba, un lampo di luce mi guizzò in mente ed…&lt;strong&gt;Eureka&lt;/strong&gt;…  trovai la soluzione.&lt;/p&gt;

&lt;p&gt;In questo diario descriverò il dettaglio tecnico.&lt;/p&gt;

&lt;p&gt;Ogni giorno la Protezione Civile siciliana pubblicava su questa &lt;a target=&quot;_blank&quot; href=&quot;http://www.regione.sicilia.it/presidenza/protezionecivile/pp/archivio_idro.asp&quot;&gt;pagina Web&lt;/a&gt;
il bollettino giornaliero dei rischi idrogeologici della regione, relativi ad un periodo che andava dalle 16 del giorno di pubblicazione fino alle 24 del
giorno successivo.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivile/bollettino.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nel bollettino apparivano diverse mappe della Sicilia suddivise per zone e per ciascuna di esse era riportato il livello del rischio
in base alla seguente scala di colori:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivile/livelli-allerta.png&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il bollettino veniva pubblicato in &lt;strong&gt;PDF&lt;/strong&gt; per cui le informazioni rimanevano confinate nel file precludendo la possibilità di
riutilizzare gli stessi dati in contesti differenti da quello originale.&lt;/p&gt;

&lt;p&gt;Per poter individuare il tipo di approccio da attuare ho analizzato attentamente il report della Protezione Civile ponendo particolare attenzione ai colori delle prime due mappe,
relative ai livelli di allerta regionali del giorno di pubblicazione e del successivo.
Per poter &lt;strong&gt;aprire&lt;/strong&gt; e &lt;strong&gt;riusare&lt;/strong&gt; i dati &lt;em&gt;ingabbiati&lt;/em&gt; nel PDF avevo bisogno di &lt;em&gt;grattare&lt;/em&gt; i colori di ogni zona al di fuori del file. 
Dovevo stabilire un insieme di passi (&lt;em&gt;oggi lo chiameremmo algoritmo&lt;/em&gt;) in grado di riconoscere i colori delle mappe, in modo automatico e puntuale,
al fine di risalire al colore di ogni singolo elemento grafico (&lt;em&gt;oggi lo chiameremmo pixel&lt;/em&gt;) presente in ciascuna zona della mappa.&lt;/p&gt;

&lt;p&gt;Vediamo i singoli passi&lt;/p&gt;

&lt;p&gt;Sul sito della Protezione Civile era presente una pagina con l’elenco di tutti i bollettini meteo e disponibile al seguente URL&lt;/p&gt;

&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.regione.sicilia.it/presidenza/protezionecivile/pp/archivio_idro.asp&quot;&gt;http://www.regione.sicilia.it/presidenza/protezionecivile/pp/archivio_idro.asp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivile/elenco-report.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il primo link dell’elenco rappresentava l’ultimo bollettino pubblicato dalla Protezione Civile.
Per estrarre tale link ho utilizzato la libreria &lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup/&quot;&gt;&lt;em&gt;BeautifulSoup&lt;/em&gt;&lt;/a&gt;, ormai lo standard de-facto per lo scraping Web in &lt;strong&gt;Angus&lt;/strong&gt; (&lt;em&gt;oggi lo chiameremmo Python&lt;/em&gt;).
Di seguito la prima parte del &lt;strong&gt;fons&lt;/strong&gt; (&lt;em&gt;oggi lo chiameremo codice sorgente&lt;/em&gt;):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://www.regione.sicilia.it/presidenza/protezionecivile/pp/archivio_idro.asp'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'lxml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Avviso rischio idrogeologico per il (.*)'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;first_row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'class'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'testo_tabelle_cent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;primo_giorno_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;primo_giorno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;primo_giorno_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;m/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;secondo_giorno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primo_giorno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;secondo_giorno_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondo_giorno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;m/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'href'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A questo punto &lt;strong&gt;href&lt;/strong&gt; conterrà il link (&lt;em&gt;relativo&lt;/em&gt;) del bollettino della Protezione Civile.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;WEB_ROOT_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://www.regione.sicilia.it/presidenza/protezionecivile/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;full_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;WEB_ROOT_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;file_pdf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'protezione-civile.pdf'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;wget_cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'wget -O '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_pdf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' &quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&quot;'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wget_cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;L’algoritmo prosegue con lo &lt;strong&gt;scaricamento&lt;/strong&gt; del file (oggi lo chiameremmo &lt;em&gt;download&lt;/em&gt;), attraverso il comando shell  &lt;strong&gt;wget&lt;/strong&gt;, invocato 
da python, grazie al quale otteniamo il trasferimento del PDF in locale sul mio &lt;strong&gt;calculator&lt;/strong&gt; (&lt;em&gt;oggi lo chiameremmo server&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Considerando che le mappe della Sicilia presenti nel report si trovavano sempre in prima pagina e sempre nella stessa posizione,
ho iniziato a pensare a come esportare i dati  al di fuori del file.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivile/mumble-meme.jpg&quot; width=&quot;30%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Volendo analizzare i colori delle mappe siciliane, ed essendo queste essenzialmente delle immagini incastonate nel PDF,
la prima cosa che mi è venuta in mente è stata quella di &lt;strong&gt;convertire&lt;/strong&gt; la prima pagina del PDF in un’immagine e 
 utilizzare le librerie grafiche disponibili in Python per poter ottenere informazioni sui colori delle specifiche zone.&lt;/p&gt;

&lt;p&gt;Attraverso il tool &lt;strong&gt;convert&lt;/strong&gt; di &lt;a href=&quot;http://www.imagemagick.org/script/index.php&quot;&gt;&lt;strong&gt;ImageMagick&lt;/strong&gt;&lt;/a&gt; ho convertito quindi 
la prima pagina del bollettino PDF in formato immagine &lt;strong&gt;PNG&lt;/strong&gt;  nel seguente modo:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;file_png&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'protezione-civile.png'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;file_pdf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'protezione-civile.pdf'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'convert '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_pdf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'[0] '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_png&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Con l’immagine generata ho individuato, in ciascuna delle prime due mappe, la posizione dei pixel ricadenti
in ogni zona, in modo da potermi dedicare all’individuazione dei colori delle zone stesse.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivile/mappe-frecce.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;262&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;174&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;182&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;188&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;105&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;186&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;106&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;208&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'E'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;230&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;219&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;269&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;248&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;266&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;222&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;216&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'I'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;246&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;202&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;520&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;174&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;438&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;188&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;364&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;186&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;364&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;209&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'E'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;431&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;230&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;477&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;268&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;506&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;265&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;480&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;216&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'I'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;504&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;202&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Utilizzando le librerie &lt;a target=&quot;_blank&quot; href=&quot;https://python-pillow.org/&quot;&gt;Pillow&lt;/a&gt; è possibile ottenere informazioni sui singoli pixel delle immagini.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pixel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getpixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La funzione &lt;em&gt;getPixel()&lt;/em&gt;, passando in input la posizione di un pixel, restituisce un vettore contenente la triade delle componenti
dei colori primari nella forma &lt;a target=&quot;blank&quot; href=&quot;https://it.wikipedia.org/wiki/RGB&quot;&gt;&lt;strong&gt;RGB&lt;/strong&gt;&lt;/a&gt; (red, green, blue), grazie alla quale è possibile risalire al colore del pixel desiderato.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivile/rgb.png&quot; width=&quot;30%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In base ai valori delle componenti di ciascun colore è possibile adesso ottenere il livello di allerta della zona interessata.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_allerta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ALLERTA VERDE - GENERICA VIGILANZA'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ALLERTA GIALLA - ATTENZIONE'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;204&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ALLERTA ARANCIONE - PREALLARME'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ALLERTA ROSSA - ALLARME'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ad esempio, la triade (0,255,0), corrisponde al colore &lt;strong&gt;VERDE&lt;/strong&gt;, la triade (255,0,0) corrisponde al colore &lt;strong&gt;ROSSO&lt;/strong&gt;
e così via.&lt;/p&gt;

&lt;p&gt;Infine è stata  definita una struttura adatta a contenere 
le informazioni estratte dal bollettino PDF; successivamente è stata salvata in un file JSON e pubblicata su un server raggiungibile via Web.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;previsioni&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;previsioni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fonte'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Regione Siciliana - Dipartimento della Protezione Civile'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;previsioni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'allerta_meteo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;previsioni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'allerta_meteo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;previsioni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'allerta_meteo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%20&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OrderedDict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;primo_giorno_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OrderedDict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondo_giorno_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OrderedDict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zona&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'E'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'I'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_pixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;picture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zona&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_primo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zona&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;allerta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_allerta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;primo_giorno_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ZONA '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zona&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allerta&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zona&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'E'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'I'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_pixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;picture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zona&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pixel_sicilia_zone_secondo_giorno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zona&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;allerta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_allerta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondo_giorno_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ZONA '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zona&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allerta&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;previsioni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'allerta_meteo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'allerta.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previsioni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ensure_ascii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;move_cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'mv allerta.json ../../gpirrotta.tk/regione-siciliana/protezione-civile/allerta.json'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;move_cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Tale codice sorgente è stato quindi fatto eseguire una volta al giorno dai &lt;strong&gt;vigilantes&lt;/strong&gt; del conte (che oggi chiameremmo &lt;em&gt;cron&lt;/em&gt;)
al fine di produrre il seguente output:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/protezionecivile/json.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[…] E fu così che ritornar potei, a notti placide e soavi sogni, pensate un pò al signorotto piacque, questa mia idea di agir così com’io ho testè scritto…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;E c’è chi dice di aver sentito il conte, adesso lui in preda ad incubi notturni, accennar sibilante insolite parole… &lt;strong&gt;xml&lt;/strong&gt;…&lt;strong&gt;RSS&lt;/strong&gt;…&lt;strong&gt;POP&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Nessuno seppe però mai cosa intendesse dire, tra veglie, convulsioni e tormenti, con quegli strani e indecifrabili farfugliamenti…&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Ioan Pairot&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; &lt;em&gt;Non so se in futuro il servizio rimarrà sempre attivo, ma se così sarà i posteri lo potranno trovare al seguente &lt;a target=&quot;blank&quot; href=&quot;http://www.gpirrotta.tk/regione-siciliana/protezione-civile/allerta.json&quot;&gt;URL&lt;/a&gt;&lt;/em&gt;.
E il codice sorgente  &lt;a target=&quot;_blank&quot; href=&quot;https://gist.github.com/gpirrotta/43697a050dfc1e5807a43f72aa1ae32d&quot;&gt;qui&lt;/a&gt;.&lt;/p&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">Tutto ebbe inizio un giorno quando, di buon mattino, in un vecchio baule antico della mia soffitta, ritrovai un vecchio manoscritto di racconti intitolato “Digital Fabulas”, la cui prima pagina recitava: Questa è la storia di Ioan Pairot, squattrinato maniscalco siciliano, che ebbe la cattiva sorte di vivere secoli or sono alla corte di un potente signorotto palermitano. Il primo dei racconti iniziava così: Galeotta fu la telefonata col conte Andreas de los Bash, nobile discendente della casata dei Borrusi, di origine borbonica, insediatasi a Palermo all’inizio del XIX secolo lamentante di non trovare sul situs Webus della Protezione Civilis dell’isola Trinacria notitia circa lo tempo previstus del giorno appresso in forma tal da essere riusata in posti altri da quel situs poco apertus. Maniscalco scapestrato qual ero, nulla potei replicare all’illustre conte, ma il pensier turbò quella mia notte insonne e mi accompagnò fin al mattino. E infin cedetti per lo sfinimento, per appagar del conte il desiderio e ritornar a dormir la notte, quieto e libero da pensier molesti a oltranza.</summary></entry><entry><title type="html">FoiaPop: accesso civico data-driven</title><link href="http://giovanni.pirrotta.it/blog/2017/07/04/foiapop-accesso-civico-data-driven/" rel="alternate" type="text/html" title="FoiaPop: accesso civico data-driven" /><published>2017-07-04T01:40:08+00:00</published><updated>2017-07-04T01:40:08+00:00</updated><id>http://giovanni.pirrotta.it/blog/2017/07/04/foiapop-accesso-civico-data-driven</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2017/07/04/foiapop-accesso-civico-data-driven/">&lt;p&gt;Ritorno a scrivere in questo blog, dopo molto tempo, su un tema a me molto caro e cioè l’utilizzo degli opendata come &lt;strong&gt;strumento&lt;/strong&gt; per facilitare 
processi inerenti la trasparenza e la diffusione di informazioni da parte delle pubbliche amministrazioni.&lt;/p&gt;

&lt;p&gt;Subito dopo il raduno di &lt;a target=&quot;_blank&quot; href=&quot;http://ods16.opendatasicilia.it&quot;&gt;Opendata Sicilia 2016&lt;/a&gt;, svoltosi a settembre a Messina, avevo voglia di smanettare 
 con gli opendata dei contratti pubblici - i cui URL dei file XML
 sono disponibili sul sito ANAC - e con gli opendata relativi agli incassi e ai pagamenti di tutte le pubbliche amministrazioni, disponibili sul sito SIOPE.
Questi dati contengono informazioni molto utili sullo stato di salute delle pubbliche amministrazioni italiane e il loro riuso, in termini di analisi, esplorazione e mashup,
 è &lt;strong&gt;carburante&lt;/strong&gt; prezioso per modelli di economie &lt;em&gt;data-based.&lt;/em&gt;&lt;/p&gt;

&lt;!--More--&gt;

&lt;p&gt;Lo sanno bene alcune startup come &lt;a target=&quot;_blank&quot; href=&quot;https://synapta.it/&quot;&gt;Synapta&lt;/a&gt; che, applicando le potenzialità del linguaggio semantico ai contratti pubblici, 
rendono più sostenibili la gestione dei dati aziendali, risolvendo problemi quotidiani di aziende, pubbliche amministrazioni e cittadini.&lt;/p&gt;

&lt;p&gt;Nel settore pubblico, invece, è da menzionare il progetto &lt;a target=&quot;_blank&quot; href=&quot;http://soldipubblici.gov.it/it/home&quot;&gt;soldipubblici&lt;/a&gt; che, a partire dagli opendata relativi alle spese delle pubbliche amministrazioni,
disponibili su &lt;a target=&quot;_blank&quot; href=&quot;http://www.siope.it&quot;&gt;SIOPE&lt;/a&gt;, promuovono e migliorano l’accesso e la comprensione dei cittadini sui dati della spesa della Pubblica Amministrazione, in un’ottica di maggiore trasparenza 
e partecipazione. &lt;em&gt;A causa del cambio di codifica SIOPE, purtroppo, il servizio è momentaneamente non disponibile&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Come dicevo prima, avevo intenzione di sperimentare qualcosa con gli opendata SIOPE e ANAC ma, anche se avevo qualche piccola idea da cui partire, non ero molto convinto su dove sarei andato a &lt;em&gt;parare&lt;/em&gt; :-) .&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/mumble-meme.jpg&quot; width=&quot;30%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sentivo forte l’esigenza di confrontarmi con chi, prima di me, si era cimentato nell’analisi di questi dati, ci aveva sbattuto la testa e sicuramente 
possedeva una visione più completa del dominio di riferimento.&lt;/p&gt;

&lt;p&gt;Avevo bisogno di parlare con &lt;a target=&quot;_blank&quot; href=&quot;https://www.twitter.com/giuragu&quot;&gt;Giuseppe Ragusa&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quasi due anni fa, Giuseppe, confrontando i dati IPA, cioè le anagrafiche delle pubbliche amministrazioni, con i dati dei contratti pubblici ANAC, aveva
scoperto delle anomalie e aveva raccontato la sua ricerca e i suoi risultati in questo &lt;a target=&quot;_blank&quot; href=&quot;http://opendatasicilia.it/2015/07/27/anac-e-indice-pa-i-dati-sugli-enti-non-tornano/&quot;&gt;post&lt;/a&gt;, che vi invito a leggere.&lt;/p&gt;

&lt;p&gt;Era l’uomo che cercavo!&lt;/p&gt;

&lt;p&gt;Ci siamo dati appuntamento un giorno di gennaio e via &lt;em&gt;hangout&lt;/em&gt; abbiamo trascorso quasi l’intero pomeriggio cercando di immaginare, intuire, intercettare
un qualche bisogno di cui il cittadino poteva avvertire l’esigenza, cercando di captare e percepire una qualche sua necessità, 
per farlo diventare, dal punto di vista della partecipazione civica, più attivo, più consapevole, più moderno.
Dopo aver partorito due/tre idee da cui partire (che non ricordo neanche più) e dopo un paio di ore di brainstorming, piano piano, in modo silente, nella discussione stava
emergendo con sempre più insistenza la parolina magica che sarebbe diventata l’architrave dell’intero progetto finale: sto parlando della parola &lt;strong&gt;FOIA&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;Non sono un giurista per cui mi scuso in anticipo per ogni imprecisione giuridica riscontrata nel proseguio del post&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Il &lt;strong&gt;FOIA&lt;/strong&gt;, acronimo di &lt;em&gt;Freedom of Information Act è una legge sulla libertà di informazione, emanata negli Stati Uniti il 4 luglio 1966&lt;/em&gt;
 (&lt;a href=&quot;https://it.wikipedia.org/wiki/Freedom_of_Information_Act&quot;&gt;Wikipedia&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;L’Italia ha recentemente introdotto uno strumento giuridico, chiamato &lt;em&gt;accesso civico generalizzato&lt;/em&gt;, che riprende a grandi linee il FOIA americano, 
motivo per cui anche in Italia si parla ultimamente così tanto di FOIA.
Con questo strumento il cittadino può richiedere alla pubblica amministrazione, tramite specifica istanza, dati, documenti, informazioni prodotti
e posseduti dalle P.A., con alcune e delimitate esclusioni.&lt;/p&gt;

&lt;p&gt;A dire il vero, mediante altre modalità di accesso, il cittadino poteva già ottenere informazioni dalle P.A., come ad esempio attraverso la richiesta di &lt;em&gt;accesso civico semplice&lt;/em&gt;.
Il cittadino, con questo strumento giuridico, ha il diritto di accesso a documenti, dati e informazioni su cui sussiste l’obbligo di pubblicazione ai sensi del 
&lt;a target=&quot;blank&quot; href=&quot;http://www.normattiva.it/uri-res/N2Ls?urn:nir:stato:decreto.legislativo:2013-03-14;33!vig=&quot;&gt;D.Lgs 33/2013&lt;/a&gt;.
Ogni pubblica amministrazione deve pubblicare sul proprio sito istituzionale, nella sezione &lt;strong&gt;Amministrazione Trasparente&lt;/strong&gt;, 
un insieme di &lt;a href=&quot;http://www.anticorruzione.it/portal/public/classic/AttivitaAutorita/AttiDellAutorita/_Atto?ca=6667&quot;&gt;informazioni&lt;/a&gt;.
Qualora il cittadino non trovi pubblicata una (o più) di queste informazioni può esercitare il diritto di 
&lt;em&gt;accesso civico semplice&lt;/em&gt;, chiedendo alla P.A. la pubblicazione dei documenti mancanti.&lt;/p&gt;

&lt;p&gt;Da segnalare lo strumento online &lt;a href=&quot;http://bussola.magellanopa.it/il-progetto.html&quot;&gt;Bussola della Trasparenza&lt;/a&gt;, realizzato dal
Ministero per la Semplificazione e la Pubblica Amministrazione, con il quale è possibile monitorare l’adempimento,
da parte dei siti Web delle pubbliche amministrazioni, degli obblighi di trasparenza imposti dalla legge italiana. 
Uno degli aspetti più interessanti di questo progetto è che i dati sul monitoraggio degli obblighi sono disponibili in &lt;a href=&quot;http://bussola.magellanopa.it/open-data.html&quot;&gt;opendata&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ritornando al brainstorming con Giuseppe, alla fine del confronto sono emerse le seguenti osservazioni/preoccupazioni:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;i cittadini &lt;strong&gt;non conoscono&lt;/strong&gt; il diritto di accesso civico, nè quello semplice nè quello generalizzato (FOIA);&lt;/li&gt;
  &lt;li&gt;i cittadini più informati (pochi) spesso non sanno da dove partire, &lt;strong&gt;non hanno&lt;/strong&gt; quindi gli strumenti per poter definire e portare a termine
una richiesta di accesso ai dati, documenti e informazioni;&lt;/li&gt;
  &lt;li&gt;le manifestazioni più importanti all’interno di una PA sono quelle su cui &lt;strong&gt;ruotano i flussi monetari&lt;/strong&gt; e cioè i pagamenti, gli incassi, gli appalti, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E’ emerso un vuoto da colmare e, sulla scia del nome del progetto &lt;a target=&quot;blank&quot; href=&quot;http://albopop.it/&quot;&gt;albopop&lt;/a&gt;, propongo di chiamare questo vuoto &lt;strong&gt;FOIAPOP&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;foiapop&quot;&gt;FOIAPOP&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/homepage.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FoiaPop&lt;/strong&gt; ha come obiettivo quello di supportare l’utente nella compilazione online di richieste di accesso civico semplice e generalizzato. 
Rispetto ad altre soluzioni simili, però, la compilazione della richiesta di accesso civico è guidata dai dati (data-driven).
FoiaPop èin grado di ricostruire, in modo preciso e puntuale, i flussi monetari specifici di ogni pubblica
amministrazione italiana, su cui il cittadino può facilmente maturare delle domande specifiche di accesso.&lt;/p&gt;

&lt;p&gt;Grazie al riutilizzo degli opendata relativi alle basi informative IPA, SIOPE, e AVCP/ANAC, l’utente può formulare le &lt;em&gt;richieste di accesso civico generalizzato&lt;/em&gt;
semplicemente cliccando sulle voci di spese, incassi o contratti pubblici.&lt;/p&gt;

&lt;p&gt;Allo stesso modo, sfruttando gli opendata relativi ai dati IPA, Obblighi ANAC e Bussola della Trasparenza, l’utente può compilare online la richiesta
di &lt;em&gt;accesso civico semplice&lt;/em&gt; per richiedere la pubblicazione di documenti obbligatori non presenti in Amministrazione Trasparente della Pubblica Amministrazione.&lt;/p&gt;

&lt;p&gt;Vediamo adesso nel dettaglio il funzionamento della piattaforma descrivendo il workflow utilizzato da FoiaPop per il suo funzionamento.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/workflow.png?t=dfdf&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Con FoiaPop è possibile &lt;strong&gt;selezionare&lt;/strong&gt; una qualsiasi pubblica amministrazione italiana (più di 20.000), &lt;strong&gt;compilare&lt;/strong&gt;
una richiesta di accesso civico in modo semplice e, in pochi click, &lt;strong&gt;generare&lt;/strong&gt; il modulo compilato in PDF da trasmettere 
alla pubblica amministrazione.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FoiaPop&lt;/strong&gt; è &lt;em&gt;ente-centrico&lt;/em&gt;, tutte le funzionalità ruotano attorno a ciascuna pubblica amministrazione e la base informativa di riferimento, 
elemento centrale su cui si basa la piattaforma, è l’indice della pubblica amministrazione &lt;a href=&quot;http://www.indicepa.gov.it/documentale/n-opendata.php&quot;&gt;IPA&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Inseriamo il nome della pubblica amministrazione di nostro interesse nell’apposito modulo di ricerca. 
Cerchiamo il termine &lt;strong&gt;Caltanissetta&lt;/strong&gt; e scegliamo, tra i vari enti possibili, il &lt;strong&gt;comune di Caltanissetta&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/caltanissetta.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FOIAPop&lt;/strong&gt; ci consentirà, quindi, di creare le seguenti richieste di accesso civico:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/sceltarichiesta.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Descriviamo adesso le diverse tipologie di richieste disponibili in &lt;strong&gt;FoiaPop.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;nuovo-accesso-civico-generalizzato&quot;&gt;Nuovo Accesso Civico Generalizzato&lt;/h2&gt;

&lt;p&gt;E’ il caso più semplice di richiesta di accesso civico generalizzato (FOIA). Cliccando su &lt;strong&gt;Nuovo Accesso Civico Generalizzato&lt;/strong&gt;
 verremo rendirizzati nel modulo di inserimento dei dati anagrafici del richiedente e del testo della richiesta.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/form-foia.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clicchiamo su &lt;strong&gt;AVANTI&lt;/strong&gt;.  &lt;strong&gt;FoiaPop&lt;/strong&gt; visualizzerà un’&lt;strong&gt;anteprima&lt;/strong&gt; della richiesta di &lt;em&gt;accesso civico generalizzato&lt;/em&gt;, utile
per effettuare gli ultimi controlli. L’anteprima riflette il modello di domanda PDF che sarà generato e presenta
quindi tutte le informazioni di contesto specifico della richiesta di accesso civico generalizzato:
l’intestatario &lt;em&gt;Ufficio Relazioni con il Pubblico&lt;/em&gt;, l’indirizzo e l’email/PEC della pubblica amministrazione, 
l’oggetto, i dati anagrafici del richiedente, la richiesta stessa e, in calce, lo spazio dedicato alla firma.
Seguono quindi le istruzioni relative alla modalità di trasmissione della richiesta che si sta per generare,
con possibilità di download.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/preview-foia.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dopo aver controllato la correttezza delle informazioni visualizzate in anteprima e
dopo aver ricordato le modalità operative di trasmissione del modello, si può procedere alla generazione in PDF
della richiesta di accesso civico generalizzato.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/foia.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A questo punto l’utente può trasmettere la richiesta secondo le modalità di trasmissione che preferisce.&lt;/p&gt;

&lt;h2 id=&quot;nuovo-accesso-civico-generalizzato-dai-dati-siope&quot;&gt;Nuovo Accesso Civico Generalizzato dai dati SIOPE&lt;/h2&gt;

&lt;p&gt;Nonostante il diritto di accesso generalizzato sia uno strumento a disposizione di tutti, spesso i cittadini non sanno cosa chiedere,
non conoscono i dati sui quali possono chiedere informazioni, spiegazioni, chiarimenti.
Per supportare il cittadino &lt;strong&gt;FoiaPop&lt;/strong&gt; consente la compilazione di richieste di accesso civico generalizzato 
a partire dai dati SIOPE, cioè a partire da dati relativi gli incassi e i pagamenti delle pubbliche amministrazioni.
Queste informazioni sono disponibili in opendata sul sito SIOPE da cui è possibile effettuare anche il &lt;a target=&quot;blank&quot; href=&quot;https://www.siope.it/Siope2Web/jsp/dispatchHome.do&quot;&gt;download&lt;/a&gt; massivo 
per anno. Il livello di dettaglio è per singolo mese, la frequenza di aggiornamento è circa settimanale e 
tutti gli importi sono organizzati per codici gestionali SIOPE.&lt;/p&gt;

&lt;p&gt;Per iniziare una nuova richiesta a partire dai dati SIOPE, dopo aver selezionato la pubblica amministrazione di nostro interesse,
clicchiamo su &lt;strong&gt;Parti dai dati SIOPE - Incassi e Pagamenti Enti Pubblici&lt;/strong&gt;  e FoiaPop ci mostretà il seguente elenco&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/siope-list.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Per ogni voce SIOPE viene mostrata la tipologia (Entrate o Uscite), l’anno e il mese di riferimento, il
 codice gestionale SIOPE, la descrizione e l’importo relativo. Il più delle volte l’elenco è composto
 da diverse centinaia di righe ed è possibile filtrare i dati per &lt;strong&gt;parola chiave&lt;/strong&gt; attraverso il modulo, posto ad inizio pagina.&lt;/p&gt;

&lt;p&gt;Scorrendo verso il basso immaginiamo di volere chiedere maggiori informazioni sulla seguente spesa:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/dispositivi-medici.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Non ci resta che cliccare su &lt;strong&gt;CREA FOIA&lt;/strong&gt; ed iniziare la nostra richiesta. FoiaPop ci ripresenterà lo stesso form
 di compilazione dei dati anagrafici che abbiamo visto in precedenza con un’interessante differenza:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/siope-form.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Subito prima del campo richiesta è presente un riquadro con il dettaglio della voce SIOPE che abbiamo selezionato
in precedenza e su cui intendiamo esercitare il diritto di accesso civico generalizzato.&lt;/p&gt;

&lt;p&gt;Clicchiamo su &lt;em&gt;AVANTI&lt;/em&gt;. Anche in questo caso FoiaPop visualizzerà l’anteprima del modulo di richiesta ed inserirà
automaticamente il riferimento ai dati SIOPE di nostro interesse, come si può vedere dalla seguente figura.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/siope-preview.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dopo aver controllato l’esattezza di tutti i dati dell’anteprima non ci resta che cliccare sul
tasto &lt;em&gt;CREA RICHIESTA FOIA&lt;/em&gt; per generare il modulo in PDF da trasmettere alla P.A.&lt;/p&gt;

&lt;h2 id=&quot;nuovo-accesso-civico-generalizzato-dai-dati-anac&quot;&gt;Nuovo Accesso Civico Generalizzato dai dati ANAC&lt;/h2&gt;
&lt;p&gt;Oltre ai dati SIOPE, &lt;strong&gt;FoiaPop&lt;/strong&gt; consente anche di creare richieste di accesso civico generalizzato a partire dai contratti pubblici delle P.A.
La base informativa di riferimento è il sito &lt;a href=&quot;http://dati.anticorruzione.it/#/l190&quot;&gt;ANAC&lt;/a&gt; dove è possibile effettuare il download
di tutti gli URL dei file XML contenenti le informazioni sui contratti pubblici delle P.A., secondo lo standard AVCP.&lt;/p&gt;

&lt;p&gt;Per iniziare una nuova richiesta dai dati ANAC, dopo aver selezionato la pubblica amministrazione di nostro interesse,
clicchiamo su &lt;strong&gt;Parti dai dati ANAC - Contratti Pubblici -&lt;/strong&gt;. FoiaPop ci mostrerà il seguente elenco&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/anac-list.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Per ogni contratto viene visualizzato la descrizione dell’appalto, i partecipanti alla gara, l’aggiudicatario, i tempi
di completamento, l’importo di aggiudicazione e l’importo delle somme liquidate.
Come già visto in precedenza, anche qui è disponibile un filtro di ricerca per parola chiave.&lt;/p&gt;

&lt;p&gt;Prendiamo per esempio il seguente appalto:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/anac-list3.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Come per i casi precedenti dobbiamo inserire tutte le informazioni anagrafiche del richiedente e, in questo caso,
nel campo relativo alla richiesta troviamo i dati sull’appalto ANAC su cui intendiamo esercitare il diritto di accesso.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/anac-form2.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clicchiamo su &lt;strong&gt;AVANTI&lt;/strong&gt; e l’anteprima ci mostrerà il riferimento ai dati ANAC incorporati nel testo della richiesta,
con in più il riferimento dell’URL, fonte dei dati ANAC e il CIG di riferimento dell’appalto.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/anac-preview2.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dopo aver controllato l’esattezza di tutte le informazioni inserite procediamo alla generazione del modulo di richiesta in PDF
cliccando su &lt;strong&gt;CREA RICHIESTA FOIA&lt;/strong&gt;. Il modulo generato potrà quindi essere trasmesso alla pubblica amministrazione.&lt;/p&gt;

&lt;h2 id=&quot;accesso-civico-generalizzato-api&quot;&gt;Accesso Civico Generalizzato API&lt;/h2&gt;

&lt;p&gt;Attraverso apposite &lt;strong&gt;API&lt;/strong&gt; FoiaPop consente l’integrazione delle sue funzionalità con siti esterni, come, ad esempio,
i siti istituzionali degli enti pubblici.&lt;/p&gt;

&lt;p&gt;L’URL da invocare è il seguente:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt; &lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;http://www.foiapop.it/api/accesso-civico-generalizzato?cf=CODICE-FISCALE-DELLA-PA&amp;amp;dati=DATI-DA-INSERIRE-NELLA-RICHIESTA&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;dove il parametro &lt;strong&gt;cf&lt;/strong&gt; (obbligatorio) rappresenta il codice fiscale della pubblica amministrazione e il parametro &lt;strong&gt;dati&lt;/strong&gt; (opzionale) 
rappresenta il &lt;em&gt;dato&lt;/em&gt; da inserire nella richiesta di accesso civico generalizzato.&lt;/p&gt;

&lt;p&gt;Un tipico scenario d’uso è, ad esempio, l’inserimento di un link (o di un bottone) nel sito istituzionale del comune 
utilizzando il parametro &lt;em&gt;dati&lt;/em&gt; per veicolare gli &lt;em&gt;oggetti&lt;/em&gt;  degli atti amministrativi degli albi pretori come dati di partenza.
L’utente che visita l’albo pretorio del comune vedrà, per ogni atto amministrativo pubblicato, un bottone &lt;em&gt;Accesso Civico&lt;/em&gt;
che lo rendirizzerà su &lt;em&gt;FoiaPop&lt;/em&gt; per la compilazione automatica della richiesta di &lt;em&gt;accesso civico generalizzato&lt;/em&gt;, a partire dai dati
relativi all’oggetto specifico di quell’atto amministrativo.&lt;/p&gt;

&lt;p&gt;Se non si vuole scendere a questo livello di dettaglio e per facilitare i webmaster dei siti delle pubbliche amministrazioni (ma anche di siti esterni)
&lt;strong&gt;FoiaPop&lt;/strong&gt; mette a disposizione dei widget pronti all’uso, da posizionare nelle pagine dei siti Web istituzionali, il cui codice HTML può essere copiato e incollato all’interno dei propri portali.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/foia-api.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;/h3&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-generalizzato/widget&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-generalizzato/widget?style=btn-success&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-generalizzato/widget?style=btn-info&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-generalizzato/widget?style=btn-warning&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-generalizzato/widget?style=btn-danger&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Cliccando su uno dei bottoni si verrà reindirizzati su &lt;strong&gt;FoiaPop&lt;/strong&gt; e si potrà iniziare il processo di compilazione della richiesta online, esattamente come già visto in precedenza. L’ente di partenza
è sempre il &lt;em&gt;Comune di Caltanissetta&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;nuovo-accesso-civico-semplice&quot;&gt;Nuovo Accesso Civico Semplice&lt;/h2&gt;

&lt;p&gt;Come già detto all’inizio di questo post, esistono diverse tipologie di accesso civico a disposizione del cittadino per richiedere informazioni e, tra queste, una delle più importanti è
la &lt;em&gt;richiesta di accesso civico semplice&lt;/em&gt;. Con questa richiesta si ha il diritto di accesso ai documenti, dati e informazioni su cui sussite l’obbligo di pubblicazione
ai sensi del D.Lgs.33/2013. Tali obblighi sono resi di più agevole comprensione da ANAC (Autorità nazionale anticorruzione) che ne ha elaborato un
 &lt;a href=&quot;http://www.anticorruzione.it/portal/rest/jcr/repository/collaboration/Digital%20Assets/anacdocs/Attivita/Atti/determinazioni/2016/1310/Del.1310.2016.All_new.xls&quot;&gt;elenco&lt;/a&gt; 
specifico.
Tali informazioni devono essere pubblicate all’interno di ogni sito istituzionale delle P.A. nella sezione Amministrazione Trasparente.
Se il cittadino non trova pubblicate una o più di queste informazioni può esercitare il diritto di &lt;em&gt;accesso civico semplice&lt;/em&gt;, chiedendo alla P.A.
la pubblicazione dei documenti mancanti.&lt;/p&gt;

&lt;p&gt;Anche per questa tipologia di richiesta FoiaPop consente di creare passo passo il modulo da trasmettere alla P.A. Vediamo come.&lt;/p&gt;

&lt;p&gt;Il punto di partenza è sempre la pubblica amministrazione di nostro interesse. Anche in questo caso scegliamo il &lt;em&gt;comune di Caltanissetta&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Clicchiamo quindi su &lt;strong&gt;Nuovo Accesso Civico Semplice - Pubblicazioni Online Obbligatorie&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/bottone-acs.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;FoiaPop ci mostrerà l’elenco dei documenti che tutte le P.A. devono pubblicare all’interno della sezione &lt;strong&gt;Amministrazione Trasparente&lt;/strong&gt; dei loro siti istituzionali.
Tali obblighi, così come previsti dall’ANAC, sono strutturati in sezioni (macrofamiglie) e in sottosezioni (tipologie di dati).&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/at-list.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Per ciascun obbligo, passando il mouse sopra l’icona &lt;strong&gt;punto interrogativo&lt;/strong&gt;, FoiaPop visualizzerà il contenuto con un dettaglio maggiore.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/at-tooltip.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FoiaPop&lt;/strong&gt;, inoltre, verificherà l’esito del monitoraggio effettuato dalla &lt;a href=&quot;http://bussola.magellanopa.it/home.html&quot;&gt;Bussola della Trasparenza&lt;/a&gt; per ciascun obbligo e, in caso di esito positivo,
mostrerà l’icona di una bussola con il collegamento alla pagina del sito istituzionale al cui interno si trova (&lt;em&gt;o si dovrebbe trovare&lt;/em&gt;) il documento relativo
all’obbligo monitorato.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/at-bussola.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;L’utente procederà quindi a inserire uno o più obblighi nella &lt;em&gt;richiesta di accesso civico semplice&lt;/em&gt;, a mò di carrello della spesa, e per ciascuna selezione potrà indicare la
motivazione della richiesta, così come di seguito riportato.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/at-carrello.png&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dopo aver selezionato il/i documento/i su cui richiedere l’accesso, premendo il tasto &lt;strong&gt;AVANTI&lt;/strong&gt; l’utente potrà inserire le informazioni anagrafiche 
così come visto in precedenza.&lt;/p&gt;

&lt;p&gt;Alla fine del modulo viene visualizzato il dettaglio degli obblighi non rispettati che si vogliono aggiungere alla richiesta.
FoiaPop consente anche di inserire, in un campo libero, eventuali precisazioni a corredo della richiesta stessa.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/at-form.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cliccando su &lt;em&gt;AVANTI&lt;/em&gt;  FoiaPop visualizzerà l’anteprima della &lt;em&gt;richiesta di accesso civico semplice&lt;/em&gt;, completa di tutte le informazioni inserite.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/at-preview.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nella stessa pagina, in basso, si troveranno sempre le indicazioni operative per la trasmissione della richiesta alla P.A. (con possibilità di download).
Dopo aver controllato l’esattezza di tutte le informazioni inserite nella richiesta possiamo cliccare su &lt;strong&gt;CREA RICHIESTA ACCESSO CIVICO SEMPLICE&lt;/strong&gt;
e FoiaPop genererà per noi il documento in PDF da trasmettere alla pubblica amministrazione.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center-image&quot; src=&quot;/images/foiapop/accesso-civico-semplice.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;accesso-civico-semplice-api&quot;&gt;Accesso Civico Semplice API&lt;/h2&gt;
&lt;p&gt;Attraverso l’accesso tramite &lt;strong&gt;API&lt;/strong&gt; è possibile generare richieste di &lt;em&gt;accesso civico semplice&lt;/em&gt; a partire da siti esterni.
L’&lt;strong&gt;URL&lt;/strong&gt; da invocare è il seguente:&lt;/p&gt;
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt; &lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;http://www.foiapop.it/api/accesso-civico-semplice?cf=CODICE-FISCALE-DELLA-PA&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;doce il parametro &lt;strong&gt;cf&lt;/strong&gt; (obbligatorio) rappresenta il codice fiscale della pubblica amministrazione.&lt;/p&gt;

&lt;p&gt;Un tipico scenario d’uso è, ad esempio, l’inserimento di un link (o di un bottone) all’interno del sito istituzionale di un comune,
nella sezione &lt;strong&gt;Amministrazione Trasparente&lt;/strong&gt;. L’utente che non riesce a trovare il documento desiderato, cliccando sul link/bottone,
viene quindi reindirizzato su &lt;strong&gt;FoiaPop&lt;/strong&gt; per la compilazione passo passo della richiesta di &lt;em&gt;accesso civico semplice&lt;/em&gt; del documento non trovato.&lt;/p&gt;

&lt;p&gt;Per facilitare il lavoro ai webmaster, &lt;strong&gt;FoiaPop&lt;/strong&gt; mette a disposizione dei widget pronti all’uso,
 da posizionare direttamente nelle pagine del sito Web istituzionale, copiando e incollando il codice HTML generato dalla piattaforma.
 L’ente è sempre il &lt;em&gt;Comune di Caltanissetta&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;demo-1&quot;&gt;Demo&lt;/h3&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-semplice/widget&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-semplice/widget?style=btn-success&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-semplice/widget?style=btn-info&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-semplice/widget?style=btn-warning&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:123px;height:35px&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;top&quot; scrolling=&quot;No&quot; frameborder=&quot;0&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; src=&quot;http://www.foiapop.it/ente/dbece4af-e46b-47cf-9e0f-26db9b9c9365/accesso-civico-semplice/widget?style=btn-danger&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Cliccando su uno di questi bottoni si verrà reindirizzati su FoiaPop e si potrà iniziare il processo di compilazione della richiesta online, esattamente come già visto in precedenza.&lt;/p&gt;

&lt;h2 id=&quot;conclusioni&quot;&gt;Conclusioni&lt;/h2&gt;
&lt;p&gt;FoiaPop è una piattaforma online per la compilazione di richieste di &lt;em&gt;accesso civico semplice e generalizzato&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;E’ online la versione &lt;a href=&quot;http://www.foiapop.it&quot;&gt;beta&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;FoiaPop è uno strumento rivolto ai cittadini per facilitare loro la compilazione delle richieste di accesso civico.
&lt;strong&gt;Ma non è solo questo.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;FoiaPop vuole essere uno strumento in grado aumentare la consapevolezza civica
del cittadino comune affinchè possa diventare sempre più partecipe e determinante nella vita amministrativa della propria città, possa comprendere sempre
meglio i processi interni della burocrazia del palazzo, possa farsi domande che suscitino in lui dubbi, critiche e osservazioni, 
che stimolino anche proposte, consigli e suggerimenti, possa svolgere attività di controllo dei processi decisionali all’interno delle istituzioni.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
Se questo progetto ti è piaciuto, mi aiuti a farlo conoscere con un tweet? Grazie!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/share?url=http://www.foiapop.it&amp;amp;text=FoiaPop+-+Accesso+civico+data-driven!+@foiapop+@gpirrotta&quot;&gt;Twittami&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/share?url=http://www.foiapop.it&amp;amp;text=FoiaPop+-+Accesso+civico+data-driven!+@foiapop+@gpirrotta&quot;&gt;&lt;img src=&quot;/images/twitter.png&quot; alt=&quot;Image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Per feedback, suggerimenti e critiche non esitate a lasciarmi un commento.&lt;/p&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">Ritorno a scrivere in questo blog, dopo molto tempo, su un tema a me molto caro e cioè l’utilizzo degli opendata come strumento per facilitare processi inerenti la trasparenza e la diffusione di informazioni da parte delle pubbliche amministrazioni. Subito dopo il raduno di Opendata Sicilia 2016, svoltosi a settembre a Messina, avevo voglia di smanettare con gli opendata dei contratti pubblici - i cui URL dei file XML sono disponibili sul sito ANAC - e con gli opendata relativi agli incassi e ai pagamenti di tutte le pubbliche amministrazioni, disponibili sul sito SIOPE. Questi dati contengono informazioni molto utili sullo stato di salute delle pubbliche amministrazioni italiane e il loro riuso, in termini di analisi, esplorazione e mashup, è carburante prezioso per modelli di economie data-based.</summary></entry><entry><title type="html">Citybot: la tua città, smart, in pochi click</title><link href="http://giovanni.pirrotta.it/blog/2016/04/09/citybot-la-tua-citta-smart-in-pochi-click/" rel="alternate" type="text/html" title="Citybot: la tua città, smart, in pochi click" /><published>2016-04-09T11:11:00+00:00</published><updated>2016-04-09T11:11:00+00:00</updated><id>http://giovanni.pirrotta.it/blog/2016/04/09/citybot-la-tua-citta-smart-in-pochi-click</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2016/04/09/citybot-la-tua-citta-smart-in-pochi-click/">&lt;p&gt;A settembre 2015 ho partecipato al raduno Open Data Sicilia, svoltosi a Palermo.
In quell’occasione sono venuto a conoscenza del progetto &lt;a href=&quot;http://www.comunweb.it/&quot;&gt;ComunWeb&lt;/a&gt;, cioè una soluzione informatica omogenea per tutti i comuni e le comunità di Valle interessate a un portale di comunicazione su piattaforma condivisa.
&lt;!--More--&gt;
La parte di ComunWeb che ha destato in me maggior attenzione è stata quella relativa all’utilizzo di un &lt;a href=&quot;http://www.comunweb.it/openpa/classes&quot;&gt;modello di dati condiviso&lt;/a&gt; fra tutti gli enti locali aderenti (attualmente 178), grazie al quale i
 flussi di dati tipici di un ente, risultati interni di processi decisionali, vengono rappresentati mediante uno schema standard unico.
 Questo passaggio, a mio avviso, è la chiave di volta dell’intero progetto perchè è propedeutico a qualsiasi discorso inerente riuso e interoperabilità, temi molto cari a un
 &lt;em&gt;opendataro&lt;/em&gt; come me. Qui non parliamo del classico &lt;em&gt;civic-hacker&lt;/em&gt; che passa le notti ad aprire dataset che la pubblica amministrazione quando va bene rilascia in modalità chiusa.
 No no, qui è la pubblica amministrazione stessa, fonte e sorgente autorevole di dati pubblici che, nell’espletamento dei compiti amministrativi quotidiani,
 produce ed espone automaticamente i dati verso l’esterno. L’infrastruttura di ComunWeb  consente
 di interrogare i dati dell’ente tramite &lt;a href=&quot;http://www.comunweb.it/Supporto/Manuale-d-uso/Funzionalita-per-gli-Open-Data/Risorse-Rest-API-v1&quot;&gt;API REST&lt;/a&gt;
  e con licenza Opendata. I dati ritornano di fatto al cittadino. Chapeau!&lt;/p&gt;

&lt;p&gt;Qualche mese più tardi  &lt;a href=&quot;https://twitter.com/aborruso&quot;&gt;Andrea Borruso&lt;/a&gt; creava l’ &lt;a href=&quot;http://albopop.it/about/&quot;&gt;Albo Pop&lt;/a&gt; del comune di Bagheria,
uno strumento in grado di collegare l’albo pretorio del comune a più canali online (RSS, Twitter, BOT Telegram), replicato successivamente anche da  &lt;a href=&quot;http://albopop.it/comune/&quot;&gt;altri comuni&lt;/a&gt;
sparsi in tutta Italia e da altre &lt;a href=&quot;http://albopop.it/altrepa/&quot;&gt;pubbliche amministrazioni&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In rete esistono tantissimi progetti che riusano dati &lt;em&gt;cittadini&lt;/em&gt; e creano valore per l’utente finale. Cito ad esempio i BOT sviluppati da &lt;a href=&quot;http://www.piersoft.it/?p=626&quot;&gt;Pierfrancesco Paolicelli&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In passato anch’io ho presentato soluzioni applicative, a partire da dati aperti e non, in grado di creare servizi per la cittadinanza: &lt;a href=&quot;http://giovanni.pirrotta.it/blog/2013/07/22/openalbopretorio-apriti-sesamo/&quot;&gt;OpenAlboPretorio&lt;/a&gt;,
&lt;a href=&quot;http://giovanni.pirrotta.it/blog/2015/08/12/parking-messina-quando-la-ztl-incontra-gli-open-data/&quot;&gt;Parking in Messina&lt;/a&gt;, BOT Telegram per i
trasporti (&lt;a href=&quot;http://giovanni.pirrotta.it/blog/2015/10/09/stazione-amat-di-palermo-ce-un-telegram-per-te/&quot;&gt;Amat Palermo&lt;/a&gt;) e per la &lt;a href=&quot;http://giovanni.pirrotta.it/blog/2015/10/28/protezione-civile-palermo-telegram-bot/&quot;&gt;Protezione Civile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tutti questi progetti erogano servizi per i cittadini, ne migliorano la vivibilità, incentivano la trasparenza
della macchina pubblica, forniscono nuove modalità di interazione sfruttando le
potenzialità della tecnologia, forniscono nuovi servizi al cittadino creando di fatto valore all’utente finale.&lt;/p&gt;

&lt;p&gt;I dati &lt;em&gt;cittadini&lt;/em&gt; sono più o meno sempre gli stessi, solitamente riguardano settori come  ambiente, macchina amministrativa, cultura,  turismo, istruzione, mobilità, sicurezza, sanità, sociale, sport, urbanistica, etc. Queste tematiche sono trasversali per città di qualsiasi dimensione, a partire da essi si potrebbero sviluppare &lt;em&gt;effettivamente&lt;/em&gt; un’infinità di applicazioni per migliorare &lt;em&gt;efficacemente&lt;/em&gt; la vita al cittadino.&lt;/p&gt;

&lt;p&gt;Spesso mi arrivano email di richieste di aiuto, per l’implementazione di servizi che ho realizzato in passato in alcune città. Richieste
di amministratori, associazioni o privati che vorrebbero vedere lo &lt;strong&gt;stesso identico&lt;/strong&gt; servizio digitale anche nella loro città.&lt;/p&gt;

&lt;p&gt;A questo punto mi faccio delle domande.&lt;/p&gt;

&lt;p&gt;Perchè non far funzionare il tutto su un’&lt;strong&gt;unica&lt;/strong&gt; piattaforma, sviluppare l’applicazione &lt;strong&gt;una&lt;/strong&gt; volta sola e renderla disponibile a &lt;strong&gt;tutte&lt;/strong&gt; le città?
E ancora, perchè non dare ad ogni cittadino, ed ad ogni città, la possibilità di crearsi uno strumento in grado di creare valore a partire dai dati posseduti senza  essere esperti di programmazione?&lt;/p&gt;

&lt;p&gt;E’ da qui che sono partito, dalla consapevolezza che, individuata un’applicazione per soddisfare un’esigenza, tale soluzione possa
essere replicata a tutte le città, in modo semplice e intuitivo.
Piuttosto che avere tante &lt;em&gt;app&lt;/em&gt; da installare sul proprio &lt;em&gt;smartphone&lt;/em&gt; ho immaginato un’applicazione  &lt;strong&gt;HUB&lt;/strong&gt;, un aggregatore configurabile di flussi informativi, scalabile ed estendibile, che possa contenere più servizi, per lo smistamento centralizzato di informazioni generati a partire soprattutto da opendata.&lt;/p&gt;

&lt;p&gt;Queste domande sono state il deterrente per la nascita di &lt;a href=&quot;http://www.citybot.it&quot;&gt;CityBot&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt; - &lt;em&gt;CityBot è un prototipo sviluppato dal sottoscritto nei ritagli di tempo extralavorativi e non è ancora in versione stabile.
Tuttavia è possibile sperimentarne già alcune funzionalità ma non è prevista ancora una data di rilascio pubblica ufficiale&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;perchè-un-bot&quot;&gt;Perchè un BOT?&lt;/h2&gt;
&lt;p&gt;Qualche giorno fa Skype (leggi Microsoft) ha &lt;a href=&quot;http://blogs.skype.com/2016/03/30/skype-bots-preview-comes-to-consumers-and-developers/&quot;&gt;annunciato&lt;/a&gt;
 il rilascio di un framework di sviluppo di BOT che consentirà agli sviluppatori di creare BOT dentro Skype.
Anche &lt;a href=&quot;https://get.slack.help/hc/en-us/articles/202026038-Slackbot-your-assistant-notepad-programmable-bot&quot;&gt;Slack&lt;/a&gt;, da tempo, consente
di programmare BOT per erogare servizi all’interno della sua chat.
Inoltre Facebook, tramite il suo &lt;strong&gt;Messenger&lt;/strong&gt;, ha iniziato a fornire servizi per gli utenti, sotto forma di BOT, anche se per adesso non ha aperto
al mondo degli sviluppatori.&lt;/p&gt;

&lt;p&gt;Con ciò cosa voglio dire? Voglio dire che l’attenzione da parte di importanti &lt;em&gt;player&lt;/em&gt; IT verso i BOT si sta facendo &lt;strong&gt;molto seria&lt;/strong&gt;!
Proprio per questo credo fermamente che il mondo dei BOT sia una strada su cui investire tempo e risorse perchè potrebbe rivelarsi un canale su cui sviluppare
modelli di business sostenibili.&lt;/p&gt;

&lt;h2 id=&quot;citybot&quot;&gt;CITYBOT&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.citybot.it&quot;&gt;CityBot&lt;/a&gt; è un configuratore di BOT Telegram in grado di creare servizi informativi per le città,
rapidamente e senza essere esperti di programmazione.&lt;/p&gt;

&lt;p&gt;CityBot fornisce attualmente le seguenti funzionalità:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Flusso RSS Feed&lt;/strong&gt; - per collegare uno o più &lt;strong&gt;feed RSS&lt;/strong&gt; e tenerti aggiornato sulle informazioni istituzionali e non della tua città: albo pretorio, news dall’università, eventi, notizie in genere, etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Flusso ComunWeb&lt;/strong&gt; - se la città aderisce al progetto &lt;strong&gt;ComunWeb&lt;/strong&gt;, a partire dai dati che il comune mette a disposizione tramite le API online,
              è possibile creare nuovi flussi informativi in CityBot e rendere il cittadino consapevole di ciò che accade nel comune.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Area di Attesa - Protezione Civile&lt;/strong&gt; - servizio che aiuta i cittadini a raggiungere le aree di attesa predisposte dalla Protezione Civile in caso di calamità naturale ed aumentare, in maniera facile e immediata, la sicurezza della città e dei suoi abitanti.&lt;/li&gt;
  &lt;li&gt;** Pagamento parcheggi in ZTL ** - per far conoscere ai cittadini, data la loro posizione, le tariffe dei parcheggi in ZTL e nelle aree circostanti.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-44.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;creazione-di-un-nuovo-bot&quot;&gt;Creazione di un nuovo BOT&lt;/h2&gt;
&lt;p&gt;Vediamo adesso come creare da zero un nuovo BOT e come arricchirlo di nuove funzionalità.
Decidiamo, ad esempio, di creare il &lt;strong&gt;CityBot&lt;/strong&gt; per la città di Palermo. Prima di operare su CityBot
dobbiamo entrare in &lt;strong&gt;Telegram&lt;/strong&gt; e creare un nuovo BOT. E’ un’operazione molto semplice, trovate
tutte le informazioni sulla &lt;a href=&quot;https://core.telegram.org/bots#botfather&quot;&gt;documentazione ufficiale&lt;/a&gt; di Telegram.
Con quest’operazione otterrete il codice identificativo segreto del BOT, chiamato &lt;strong&gt;TOKEN&lt;/strong&gt;, che ci servirà
per la creazione del CityBot.&lt;/p&gt;

&lt;p&gt;Andando quindi su Telegram creiamo il BOT &lt;a href=&quot;https://telegram.me/PalermoCity_Bot&quot;&gt;PalermoCity_Bot&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ritornando a CityBot, dopo una prima fase di registrazione, effettuiamo il login e ci ritroviamo nella pagina di benvenuto:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-1.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A questo punto clicchiamo su &lt;strong&gt;Crea il cityBot per la tua città&lt;/strong&gt; e davanti a noi apparirà la seguente schermata
che ci chiederà di inserire il nome della città del BOT e il &lt;strong&gt;TOKEN&lt;/strong&gt; di Telegram, ottenuto in fase di creazione del BOT.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-2.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Inseriti &lt;strong&gt;nome&lt;/strong&gt; della città e &lt;strong&gt;TOKEN&lt;/strong&gt; (&lt;em&gt;fittizio nell’esempio&lt;/em&gt;),&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-3.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;possiamo creare il BOT.
Automaticamente la piattaforma riconoscerà il nome del BOT e ci consentirà di configurarlo in base alle nostre necessità.
Cliccando su &lt;strong&gt;Configura&lt;/strong&gt;,
&lt;img src=&quot;/images/citybot-4.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;entreremo nel pannello di configurazione del BOT:&lt;/p&gt;

&lt;p&gt;![Image](/images/citybot-5.jpg?a %}&lt;/p&gt;

&lt;p&gt;Dal pannello superiore si potrà accendere il BOT, spegnerlo, eliminarlo o modificare la città.
La parte più interessante, però, è quella dei servizi disponibili, in elenco nel pannello inferiore.
Nella sezione &lt;strong&gt;Plugin disponibili&lt;/strong&gt; sono presenti i seguenti servizi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;**Flusso RSS Feed **&lt;/li&gt;
  &lt;li&gt;**Flusso ComunWeb **&lt;/li&gt;
  &lt;li&gt;**Area di Attesa - Protezione Civile **&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Parcheggio Zone a Traffico Limitato (ZTL)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entriamo nel dettaglio in ciascuno dei servizi.&lt;/p&gt;

&lt;p&gt;##Flusso RSS Feed
L’&lt;strong&gt;RSS&lt;/strong&gt; è uno dei più popolari formati per la distribuzione di contenuti Web, un flusso di testo aggiornato automaticamente sui
nuovi articoli del sito a cui si riferisce.
Al plugin di CityBot è possibile agganciare uno o più feed RSS, inerenti qualsiasi tipo di news: municipio, università, cronaca, politica, attualità, sport, eventi, etc.&lt;/p&gt;

&lt;p&gt;Nel nostro esempio decidiamo di collegare in CityBot le notizie del comune.
Sul sito del comune di Palermo i feed RSS sono disponibili alla seguente &lt;a href=&quot;http://www.comune.palermo.it/lista_rss.php&quot;&gt;pagina&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-8.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Decidiamo di agganciare al nostro CityBot i seguenti feed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Informazione&lt;/strong&gt;: Comunicati stampa, scadenze, avvisi, accade a Palermo &lt;a href=&quot;http://www.comune.palermo.it/feed/rss.xml&quot;&gt;feed&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bandi e Gare&lt;/strong&gt;: &lt;a href=&quot;http://www.comune.palermo.it/feed/rss_bandi.xml&quot;&gt;feed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Spostiamoci adesso su CityBot e iniziamo ad aggiungere il primo plugin al nostro CityBot scegliendo quindi &lt;strong&gt;flusso RSS Feed&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Clicchiamo su &lt;strong&gt;Aggiungi&lt;/strong&gt; e vedremo comparire il plugin nella sezione &lt;strong&gt;Plugin Aggiunti&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-6.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A questo punto configuriamo il plugin cliccando su &lt;strong&gt;Configura&lt;/strong&gt; e definiamo un nome per il servizio RSS. Tale nome comparirà nel menù del BOT, per cui cerchiamo di sceglierne uno il più appropriato possibile
al contenuto informativo da agganciare. In questo caso, ad esempio, scegliamo il nome &lt;strong&gt;“Comune di Palermo”&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;![Image](/images/citybot-9.jpg?a %}&lt;/p&gt;

&lt;p&gt;Andiamo avanti e iniziamo la configurazione dei feed RSS.&lt;/p&gt;

&lt;p&gt;![Image](/images/citybot-10.jpg?p %}&lt;/p&gt;

&lt;p&gt;Nella sezione &lt;strong&gt;Feed collegati&lt;/strong&gt; clicchiamo sul bottone &lt;strong&gt;Aggiungi&lt;/strong&gt; (segno più)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-11.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;e inseriamo il primo feed RSS&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-12.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anche in questo caso il nome del feed corrisponderà al nome del sottocomando del BOT.
Per il nostro esempio inseriamo il nome &lt;strong&gt;News&lt;/strong&gt;.
Il numero max di elementi del feed è configurabile ma nel nostro esempio lasciamo il valore di default 10.&lt;/p&gt;

&lt;p&gt;Ripetiamo la stessa operazione per il secondo feed inserendo come nome &lt;strong&gt;Bandi e Gare&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-13.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Per ogni feed possiamo verificarne il contenuto o procedere alla rimozione.&lt;/p&gt;

&lt;p&gt;![Image](/images/citybot-14.jpg?o %}&lt;/p&gt;

&lt;p&gt;Ritorniamo nel pannello di amministrazione del plugin e accendiamo il servizio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-16.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dopodichè accendiamo anche il BOT,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-17.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ci spostiamo sul nostro smartphone e cerchiamo il &lt;strong&gt;Canale&lt;/strong&gt; &lt;a href=&quot;https://telegram.me/PalermoCity_Bot&quot;&gt;PalermoCity_BOT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-29.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nella schermata compare il messaggio di benvenuto e in basso il menù dei comandi disponibili.
A sinistra compare il comando &lt;strong&gt;Comune di Palermo&lt;/strong&gt;, definito nella configurazione del flusso RSS, mentre a destra il comando,
sempre presente nel menù principale, relativo alle informazioni di CityBot. Cliccando su quest’ultimo vedremo la seguente schermata:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-30.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nella schermata sono presente informazioni relative a CityBot, tra cui la città di riferimento e il nome dell’utente che ha creato il BOT.
Cliccando invece sul primo comando, cioè &lt;strong&gt;Comune di Palermo&lt;/strong&gt;, apparirà il seguente menù:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-31.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il bottone di sinistra, così come configurato precedentemente, è collegato al feed RSS relativo alle informazioni sul &lt;strong&gt;comune di Palermo&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-32.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il bottone di destra è collegato invece  al feed RSS relativo alle informazioni su &lt;strong&gt;Bandi e gare&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-33.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;##Flusso Comun Web
ComunWeb nasce come riuso di una piattaforma realizzata per il comune di Trento, sviluppata da OpenContent
 e usata oggi da 178 enti locali, 2.123 amministratori locali e 5.000 dipendenti comunali.
L’infrastruttura fornita da ComunWeb consente di strutturare e organizzare in modo intelligente le informazioni trattate
mediante l’utilizzo di un &lt;a href=&quot;http://www.comunweb.it/openpa/classes&quot;&gt;modello di dati condiviso&lt;/a&gt; e di esporre tali dati con licenza opendata attraverso delle API REST.&lt;/p&gt;

&lt;p&gt;E’ possibile collegare CityBot ad un flusso dati ComunWeb proveniente da qualsiasi comune aderente.
Anche se non ha molto senso agganciare un flusso ComunWeb al nostro CityBot, dato che Palermo non è fra gli enti aderenti,
immaginiamo di configurare il nostro CityBot per una città aderente, ad esempio per la città di &lt;a href=&quot;http://www.comune.ala.tn.it/&quot;&gt;Ala&lt;/a&gt; (TN).&lt;/p&gt;

&lt;p&gt;Interrogando le &lt;a href=&quot;http://www.comune.ala.tn.it/api/opendata/v1/help&quot;&gt;API&lt;/a&gt; disponibili risaliamo ai link relativi al catalogo dei dataset, alla lista delle classi globali e a quelle utilizzate. Da quest’ultimo link decidiamo di agganciare CityBot con
l’&lt;a href=&quot;http://www.comune.ala.tn.it/api/opendata/v1/content/class/albo_elenco&quot;&gt;Albo Pretorio&lt;/a&gt; e l’elenco
delle &lt;a href=&quot;http://www.comune.ala.tn.it/api/opendata/v1/content/class/associazione&quot;&gt;associazioni&lt;/a&gt; presenti in città.&lt;/p&gt;

&lt;p&gt;Individuate le fonti dati spostiamoci sul pannello di configurazione di CityBot e aggiungiamo il plugin &lt;strong&gt;Flusso ComunWeb&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-18.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entriamo in configurazione e, come per il &lt;strong&gt;Flusso RSS&lt;/strong&gt;, inseriamo il nome che apparirà nel comando del menù principale del BOT;
decidiamo di mettere come nome &lt;strong&gt;Comune di Ala (TN)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-19.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Inseriamo i due link di interrogazione per le informazioni da collegare. Decidiamo di chiamarli &lt;strong&gt;Albo Pretorio&lt;/strong&gt; e &lt;strong&gt;Associazioni&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-20.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anche in questo caso accendiamo il servizio, accendiamo il BOT e ci spostiamo sullo smartphone.&lt;/p&gt;

&lt;p&gt;Come possiamo vedere dalla schermata, il bottone relativo al &lt;strong&gt;Comune di Ala&lt;/strong&gt; è stato aggiunto a fianco a quello del &lt;strong&gt;Comune di Palermo&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-34.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al nuovo bottone è associato il seguente sottomenù:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-35.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al bottone &lt;strong&gt;Albo Pretorio&lt;/strong&gt; corrisponderà il seguente flusso ComunWeb:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-36.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al bottone &lt;strong&gt;Associazioni&lt;/strong&gt; è agganciato invece quest’altro flusso:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-37.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;protezione-civile&quot;&gt;Protezione Civile&lt;/h2&gt;
&lt;p&gt;Dal &lt;a href=&quot;http://www.protezionecivile.gov.it/jcms/it/glossario.wp?contentId=GLO13370&quot;&gt;sito&lt;/a&gt;
della Protezione Civile leggiamo:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Le aree di attesa sono i luoghi di prima accoglienza per la popolazione; possono essere utilizzate piazze, slarghi, parcheggi, spazi pubblici o privati non soggetti a rischio (frane, alluvioni, crollo di strutture attigue, etc.), raggiungibili attraverso un percorso sicuro. Il numero delle aree da scegliere è funzione della capacità ricettiva degli spazi disponibili e del numero degli abitanti. In tali aree la popolazione riceve le prime informazioni sull’evento e i primi generi di conforto. Le Aree di Attesa della popolazione saranno utilizzate per un periodo di tempo compreso tra poche ore e qualche giorno.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Il plugin &lt;strong&gt;Area di Attesa - Protezione Civile&lt;/strong&gt; si pone come obiettivo quello di individuare
in caso di emergenza, l’area di accoglienza più vicina prevista dalla Protezione Civile,
fornendoci indicazioni relative alla distanza, percorso e tempo di percorrenza a partire
dalla nostra posizione attuale.&lt;/p&gt;

&lt;p&gt;Dal pannello di CityBot aggiungiamo il plugin &lt;strong&gt;Area di Attesa - Protezione Civile&lt;/strong&gt; ed entriamo
in configurazione. Visualizzeremo la seguente schermata:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-21.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A questo punto dovremo disegnare i poligoni corrispondenti alle aree di attesa della Protezione Civile.
Possiamo farlo in due modi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;disegnando le aree attraverso lo strumento &lt;strong&gt;Poligono&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;importando la mappa da file GEOJSON&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nel &lt;strong&gt;primo caso&lt;/strong&gt; bisognerà individuare l’area di attesa sulla mappa,  cliccare sullo strumento &lt;strong&gt;Poligono&lt;/strong&gt; in alto a destra,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-22.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;e iniziare a disegnare il poligono lato per lato.-&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-23.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Alla chiusura del poligono sarà necessario inserire informazioni relative all’area di attesa disegnata:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-24.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Inserite le informazioni dell’area di attesa, per aggiornare la mappa bisognerà cliccare su &lt;strong&gt;Aggiorna Dati&lt;/strong&gt;.
Dopo aver disegnato tutte le aree manualmente, per salvare la mappa in CityBot bisognerà cliccare su &lt;strong&gt;Salva mappa&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Nel &lt;strong&gt;secondo caso&lt;/strong&gt; basterà invece uplodare la mappa da file &lt;a href=&quot;http://geojson.org/&quot;&gt;GEOJSON&lt;/a&gt;, con l’unica accortezza
di inserire le informazioni delle aree di attesa in proprietà chiamate &lt;strong&gt;name&lt;/strong&gt; e &lt;strong&gt;description&lt;/strong&gt;, dentro &lt;strong&gt;properties&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Esempio di caricamento delle aree di attesa da file GEOJSON:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-25.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Usciamo e ritorniamo nel pannello di amministrazione del BOT; accendiamo il servizio e spostiamoci sullo smartphone.&lt;/p&gt;

&lt;p&gt;Il nuovo menù principale apparirà nel seguente modo:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-38.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cliccando su &lt;strong&gt;Protezione Civile&lt;/strong&gt; saremo invitati a cliccare sull’icona graffetta e ad inserire la nostra posizione geografica.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-39.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CityBot automaticamente calcolerà l’area di accoglienza più vicina, indicando sia la distanza per raggiungerla che il tempo di percorrenza a piedi.
Verrà fornita anche la mappa e il link del percorso da seguire, passo passo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-40.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;parcheggio-zone-a-traffico-limitato-ztl&quot;&gt;Parcheggio Zone a Traffico Limitato (ZTL)&lt;/h2&gt;
&lt;p&gt;Il problema dei parcheggi fuori e dentro le ZTL è più o meno trasversale a tutte le città.
Vediamo adesso come sfruttare CityBot per calcolare automaticamente la tariffa oraria dei parcheggi, in base alla
posizione GPS dello smartphone.&lt;/p&gt;

&lt;p&gt;Aggiungiamo quindi l’ultimo dei servizi disponibili in CityBot e procediamo alla sua configurazione.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-26.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anche per questo plugin, come per quello precedente, è possibile disegnare le mappe delle zone di parcheggio manualmente o da
file GEOJSON. Nel primo caso indicheremo quindi nel campo &lt;strong&gt;Nome&lt;/strong&gt; il nome dell’area di pagamento (ad es. P1, P2, ZTL1, ZTL2, etc.)
e nel campo &lt;strong&gt;Descrizione&lt;/strong&gt;, il dettaglio del pedaggio da pagare (Tariffa oraria, Fascia Oraria, Validità, etc.).
Per il nostro esempio, su &lt;a href=&quot;https://umap.openstreetmap.fr&quot;&gt;umap&lt;/a&gt; troviamo la &lt;a href=&quot;https://umap.openstreetmap.fr/it/map/mappa-parcheggi-su-strada-a-pagamento-e-ztl-palerm_58038#12/38.1269/13.3717&quot;&gt;mappa dei parcheggi&lt;/a&gt;
 su strada a pagamento di Palermo; decidiamo quindi di caricare su CityBot il file GEOJSON, &lt;em&gt;adattando&lt;/em&gt; opportunamente il campo &lt;strong&gt;properties&lt;/strong&gt; (&lt;em&gt;name&lt;/em&gt; e &lt;em&gt;description&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-27.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ritorniamo nel pannello del BOT,accendiamo quest’ultimo servizio e il BOT. Spostandoci adesso sullo smartphone il menù sarà adesso:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-41.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cliccando su &lt;strong&gt;Pedaggio in ZTL&lt;/strong&gt;, ci verrà chiesto di inserire la propria posizione, sempre tramite l’icona graffetta, e CityBot
ci fornirà le informazioni relative al pedaggio da pagare in base alla nostra posizione.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/citybot-42.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusioni&quot;&gt;Conclusioni&lt;/h2&gt;
&lt;p&gt;In questo post ho voluto raccontare la mia visione di città digitale.
Tutto nasce dalla convinzione che l’utilità di un servizio digitale presente in una città
può e deve essere esportata con facilità in qualsiasi altra città in modo che tutti i cittadini possano beneficiare degli stessi vantaggi digitali.&lt;/p&gt;

&lt;p&gt;Da diversi mesi sto investendo tempo e risorse nello sviluppo di servizi digitali con i BOT Telegram
e &lt;em&gt;CityBot&lt;/em&gt; è un pò la &lt;em&gt;summa&lt;/em&gt; delle esperienze maturate.&lt;/p&gt;

&lt;p&gt;In futuro ho in mente di estendere &lt;em&gt;CityBot&lt;/em&gt; con le seguenti funzionalità:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;plugin su altri &lt;strong&gt;Punti di Interesse&lt;/strong&gt; (farmacie, ospedali, parchi, attività commerciali);&lt;/li&gt;
  &lt;li&gt;plugin &lt;strong&gt;Raccolta Differenziata&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;plugin &lt;strong&gt;Meteo&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;plugin &lt;strong&gt;Trasporti&lt;/strong&gt; (agganciato a &lt;a href=&quot;http://transit.land&quot;&gt;Transit.land&lt;/a&gt;);&lt;/li&gt;
  &lt;li&gt;attivazione &lt;strong&gt;Canali&lt;/strong&gt; per notifiche push.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La piattaforma di &lt;em&gt;CityBot&lt;/em&gt; si trova &lt;a href=&quot;http://www.citybot.it&quot;&gt;qui&lt;/a&gt;.
Se volete provare il CityBot creato come esempio per la città di Palermo, cliccate &lt;a href=&quot;https://telegram.me/PalermoCity_Bot&quot;&gt;qui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se &lt;em&gt;CityBot&lt;/em&gt; vi è piaciuto, aiutatemi a farlo conoscere con un tweet, grazie!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/share?url=http://www.citybot.it&amp;amp;text=@gpirrotta+CityBot+-+Crea+il+BOT+della+Tua+Città+in+Pochi+Click!&quot;&gt;Twittami&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/share?url=http://www.citybot.it&amp;amp;text=@gpirrotta+CityBot+-+Crea+il+BOT+della+Tua+Città+in+Pochi+Click!&quot;&gt;&lt;img src=&quot;/images/twitter.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Per feedback, suggerimenti e critiche non esitate a lasciarmi un commento.&lt;/p&gt;

&lt;p&gt;That’s all folks! Stay tuned!&lt;/p&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">A settembre 2015 ho partecipato al raduno Open Data Sicilia, svoltosi a Palermo. In quell’occasione sono venuto a conoscenza del progetto ComunWeb, cioè una soluzione informatica omogenea per tutti i comuni e le comunità di Valle interessate a un portale di comunicazione su piattaforma condivisa.</summary></entry><entry><title type="html">Quando un BOT può salvarti la vita!</title><link href="http://giovanni.pirrotta.it/blog/2015/10/28/protezione-civile-palermo-telegram-bot/" rel="alternate" type="text/html" title="Quando un BOT può salvarti la vita!" /><published>2015-10-28T14:21:00+00:00</published><updated>2015-10-28T14:21:00+00:00</updated><id>http://giovanni.pirrotta.it/blog/2015/10/28/protezione-civile-palermo-telegram-bot</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2015/10/28/protezione-civile-palermo-telegram-bot/">&lt;p&gt;Ok, lo confesso, mi sto facendo prendere un pò troppo la mano
da &lt;a href=&quot;https://telegram.org/&quot;&gt;Telegram&lt;/a&gt; e il suo &lt;a href=&quot;https://core.telegram.org/bots&quot;&gt;BOT&lt;/a&gt;,
ma non è colpa mia se hanno reso così semplice e disarmante creare servizi di valore con la loro chat. :-)&lt;/p&gt;

&lt;p&gt;Succede, però, che un lunedì mattina ricevo una email di &lt;a href=&quot;https://twitter.com/aborruso&quot;&gt;Andrea Borruso&lt;/a&gt;,
il quale mi propone, su un’idea di &lt;a href=&quot;https://twitter.com/cirospat&quot;&gt;Ciro Spataro&lt;/a&gt;, di sviluppare un BOT
che consenta ai cittadini palermitani, in caso di emergenza, di essere informati tempestivamente sulla posizione delle aree
di accoglienza da raggiungere, predisposte dalla Protezione Civile di Palermo.&lt;/p&gt;

&lt;!--More--&gt;

&lt;p&gt;Dal &lt;a href=&quot;http://www.protezionecivile.gov.it/jcms/it/glossario.wp?contentId=GLO13371&quot;&gt;sito&lt;/a&gt;
della protezione civile si legge:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Le aree di accoglienza sono luoghi, individuati in aree sicure rispetto alle diverse tipologie
di rischio e poste nelle vicinanze di risorse idriche, elettriche e fognarie, in cui vengono
installati i primi insediamenti abitativi per alloggiare la popolazione colpita. Dovranno essere
facilmente raggiungibili anche da mezzi di grandi dimensioni per consentirne l’allestimento e
 la gestione. Rientrano nella definizione di aree di accoglienza o di ricovero anche le strutture
 ricettive (hotel, residence, camping, etc.).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/protezione-civile.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Negli ultimi quaranta anni, in molte zone d’Italia e specialmente in Sicilia, si sono verificati
eventi di dissesto idrogeologico che hanno avuto conseguenze spesso catastrofiche. Senza andare troppo lontano
negli anni, lucido è in me il ricordo del &lt;a href=&quot;https://it.wikipedia.org/wiki/Alluvione_di_Messina_del_2009&quot;&gt;violento nubifragio di Messina del 2009&lt;/a&gt;,
in cui hanno perso la vita 35 persone.
Di conseguenza, la possibilità di diffondere informazioni ufficiali e prioritarie  da parte delle
istituzioni competenti, anche attraverso nuovi media che sfruttino la componente digitale
come chiavistello per aprire canali mai raggiunti prima e arrivare, in caso di emergenza, a quanta più
gente possibile nel più  breve tempo possibile, assume un’importanza sempre
più decisiva e strategica per la salvaguardia di vite umane.&lt;/p&gt;

&lt;p&gt;In questo contesto, la disponibilità di dati aperti, gratuiti e accessibili riguardanti informazioni strategiche
e di raccordo, soprattutto nei settori in cui la tempestività e il veicolo di
informazioni giocano un ruolo cruciale, costituisce un elemento determinante e necessario per
lo sviluppo di servizi vitali per il cittadino.&lt;/p&gt;

&lt;p&gt;Chi sicuramente ha già capito questo  è &lt;a href=&quot;https://twitter.com/cirospat&quot;&gt;Ciro Spataro&lt;/a&gt; che, in veste di civic-hacker,
ha mappato le &lt;a href=&quot;http://umap.openstreetmap.fr/it/map/mappa-piano-protezione-civile-palermo-2014_16328#12/38.1190/13.3422&quot;&gt;aree di accoglienza persone della Protezione Civile di Palermo&lt;/a&gt;
usando &lt;a href=&quot;http://umap.openstreetmap.fr/it/&quot;&gt;umap&lt;/a&gt; e &lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;openstreetmap&lt;/a&gt;.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;300px&quot; frameborder=&quot;0&quot; src=&quot;http://umap.openstreetmap.fr/it/map/mappa-piano-protezione-civile-palermo-2014_16328?scaleControl=false&amp;amp;miniMap=false&amp;amp;scrollWheelZoom=false&amp;amp;zoomControl=true&amp;amp;allowEdit=false&amp;amp;moreControl=true&amp;amp;datalayersControl=true&amp;amp;onLoadPanel=undefined&amp;amp;captionBar=false&amp;amp;datalayers=29962&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;http://umap.openstreetmap.fr/it/map/mappa-piano-protezione-civile-palermo-2014_16328&quot;&gt;Visualliza schermo intero&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Poniamoci adesso questa domanda: come possiamo riutilizzare i dati della mappa in altri contesti e
 creare servizi di valore e gratuiti per i cittadini palermitani?&lt;/p&gt;

&lt;p&gt;Ciro suggerisce di prendere come esempio il lavoro fatto a &lt;a href=&quot;https://iltempe.github.io/Emergenzeprato/&quot;&gt;Prato&lt;/a&gt; da
 &lt;a href=&quot;http://pratosmart.teo-soft.com/emergenzeprato/&quot;&gt;Matteo Tempestini&lt;/a&gt;, cioè un BOT Telegram
 in grado di fornire varie informazioni utili per il cittadino, tra cui la possibilità di individuare,
 in caso di emergenza, l’area di accoglienza più vicina prevista dalla Protezione Civile.&lt;/p&gt;

&lt;p&gt;Ho già avuto a che fare sia con progetti legati alla georeferenziazione di posizioni geografiche e
alla loro appartenenza rispetto ad un’area geografica (ne parlo in questo &lt;a href=&quot;http://giovanni.pirrotta.it/blog/2015/08/12/parking-messina-quando-la-ztl-incontra-gli-open-data/&quot;&gt;post&lt;/a&gt;) sia con
progetti legati allo sviluppo di BOT su dati relativi ai trasporti urbani
(ne parlo in quest’altro &lt;a href=&quot;http://giovanni.pirrotta.it/blog/2015/10/09/stazione-amat-di-palermo-ce-un-telegram-per-te/&quot;&gt;post&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Tecnicamente si tratta di risolvere il seguente problema: data una posizione geografica, leggi
&lt;em&gt;latitudine&lt;/em&gt; e &lt;em&gt;longitudine&lt;/em&gt;, individuare l’area di accoglienza o di ricovero della popolazione
più vicine, secondo quanto previsto dalla Protezione Civile.&lt;/p&gt;

&lt;p&gt;Dalla mappa mi esporto quindi tutte le aree in formato &lt;em&gt;geoJSON&lt;/em&gt;, recuperando le
coordinate dei vertici di ogni poligono. Dopodichè l’applicazione mi dovrà restituire
l’area che ha il vertice più vicino alla posizione dell’utente.&lt;/p&gt;

&lt;p&gt;La logica del programma è molto semplice:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;L’utente invia la propria posizione tramite il BOT&lt;/li&gt;
  &lt;li&gt;L’applicazione seleziona l’area di accoglienza più vicina
confrontando le distanze tra la posizione dell’utente e i vertici di tutte le aree&lt;/li&gt;
  &lt;li&gt;L’applicazione restituisce:
    &lt;ul&gt;
      &lt;li&gt;il nome dell’area di accoglienza più vicina&lt;/li&gt;
      &lt;li&gt;la mappa geografica dell’area&lt;/li&gt;
      &lt;li&gt;la distanza in km&lt;/li&gt;
      &lt;li&gt;il tempo necessario per raggiungere l’area a piedi&lt;/li&gt;
      &lt;li&gt;il link con il percorso da seguire.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In un mio precedente &lt;a href=&quot;http://giovanni.pirrotta.it/blog/2015/10/09/stazione-amat-di-palermo-ce-un-telegram-per-te/&quot;&gt;post&lt;/a&gt;
ho affrontato il problema della distanza di un punto da una lista di punti utilizzando in modo
diretto formule trigonometriche e una chiamata SQL.&lt;/p&gt;

&lt;p&gt;Questa volta invece utilizzerò la libreria &lt;a href=&quot;https://github.com/thephpleague/geotools#geotools&quot;&gt;GeoTools&lt;/a&gt;, sviluppata da Antoine Corcy.
La libreria fornisce molteplici funzionalità legate al mondo della georeferenziazione tra cui geocodifiche dirette e inverse, conversioni tra coordinate, distanze tra punti geografici in metri, chilometri, miglia o piedi, etc.&lt;/p&gt;

&lt;p&gt;Siano, ad esempio, &lt;em&gt;$coordA&lt;/em&gt; e &lt;em&gt;$coordB&lt;/em&gt; i due punti di cui si vuole conoscere la distanza;
 per creare l’oggetto &lt;em&gt;distance&lt;/em&gt; è necessario digitare quanto segue:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  Telegram&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$geotools&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\League\Geotools\Geotools&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$coordA&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\League\Geotools\Coordinate\Coordinate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;48.8234055&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3072664&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$coordB&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\League\Geotools\Coordinate\Coordinate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;43.296482&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.36978&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$distance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$geotools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$coordA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$coordB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Per avere la distanza in metri (default) con il più performante tra gli algoritmi in libreria, digitiamo invece:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  Algoritmo flat&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$distance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;659166.50038742&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;meters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Se volessimo utilizzare invece l’algoritmo &lt;strong&gt;great-circle&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  Telegram API&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$distance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;greatCircle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;659021.90812846&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Per avere la distanza in chilometri utilizzando l’algoritmo &lt;strong&gt;haversine&lt;/strong&gt;, l’invocazione sarà la seguente:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  Algoritmo haversine&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$distance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'km'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;haversine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;659.02190812846&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;L’algoritmo &lt;strong&gt;vincenty&lt;/strong&gt;, il più accurato fra tutti quelli presenti, è invocato nel
seguente modo, con distanza in miglia:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  Algoritmo vincenty&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$distance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;vincenty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;409.05330679648&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Per maggiori informazioni consultate la
&lt;a href=&quot;https://github.com/thephpleague/geotools#geotools&quot;&gt;documentazione ufficiale&lt;/a&gt;
 della libreria.&lt;/p&gt;

&lt;p&gt;Risolto il problema di &lt;em&gt;come&lt;/em&gt; calcolare la distanza, trovare l’area di accoglienza più vicina
 diventa un’operazione banale.&lt;/p&gt;

&lt;p&gt;La funzionalità è affidata alla classe &lt;em&gt;GeoToolsDistance&lt;/em&gt; che implementa il metodo &lt;em&gt;distance&lt;/em&gt;
come da contratto con l’interfaccia &lt;em&gt;DistanceInterface&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  Metodo &quot;distance&quot;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Vertex&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vertex&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nv&quot;&gt;$coordFrom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Coordinate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLatitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLongitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nv&quot;&gt;$coordTo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Coordinate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLatitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLongitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nv&quot;&gt;$distanceCalculator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;geotools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$coordFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$coordTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$distanceCalculator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'km'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;haversine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;In input vengono presi due oggetti del dominio di classe &lt;a href=&quot;https://github.com/gpirrotta/protezione-civile-bot/blob/master/src/GP/ProtezioneCivileBot/Model/Vertex.php&quot;&gt;Vertex&lt;/a&gt;. Il codice è autoesplicativo.&lt;/p&gt;

&lt;p&gt;Per confrontare le distanze di tutte le aree di accoglienza partiamo dall’oggetto &lt;a href=&quot;https://github.com/gpirrotta/protezione-civile-bot/blob/master/src/GP/ProtezioneCivileBot/Model/Map.php&quot;&gt;Map&lt;/a&gt;
che, dopo aver caricato in memoria la struttura dati del file &lt;strong&gt;GeoJSON&lt;/strong&gt;, contenente le coordinate
geografiche delle aree di accoglienza della protezione civile di Palermo, calcola la distanza minima all’interno del metodo
&lt;em&gt;getNearestArea&lt;/em&gt;. Il metodo prende in input la posizione dell’utente e restituisce in output l’area di accoglienza più vicina.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  Metodo &quot;getNearestArea&quot;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getNearestArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Vertex&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$vertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nv&quot;&gt;$areaNearest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nv&quot;&gt;$distanceNearest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PHP_INT_MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aree&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$areaAccoglienza&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;            &lt;span class=&quot;nv&quot;&gt;$areaAccoglienza&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;calculateVertexNearest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$vertex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;            &lt;span class=&quot;nv&quot;&gt;$v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$areaAccoglienza&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getVertexNearest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDistance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$distanceNearest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;10&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;                &lt;span class=&quot;nv&quot;&gt;$distanceNearest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDistance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;11&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;                &lt;span class=&quot;nv&quot;&gt;$areaNearest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$areaAccoglienza&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;12&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;            &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;13&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;14&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;15&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$areaNearest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;16&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Per calcolare il tempo necessario per raggiungere l’area di accoglienza a piedi
 (&lt;em&gt;feature consigliata da Andrea&lt;/em&gt;) ho usato l’API &lt;a href=&quot;https://developers.google.com/maps/documentation/distance-matrix/intro&quot;&gt;distancematrix&lt;/a&gt; messa a disposizione
 da Google.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  API distancematrix&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;https://maps.googleapis.com/maps/api/distancematrix/json?origins=LATITUDINE-ORIGINE,LONGITUDINE-ORIGINEs&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;destinations=LATITUDINE-DESTINAZIONE,LONGITUDINE-DESTINAZIONE&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;mode=walking&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;language=it-IT&quot;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;L’output della chiamata restituisce informazioni relative alla distanza del viaggio e al tempo necessario per,
 partendo dal primo punto, raggiungere il secondo punto a piedi.&lt;/p&gt;

&lt;p&gt;Per il percorso da seguire ho semplicemente inviato al BOT il seguente link, sostituendo opportunamente le variabili delle coordinate geografiche:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  API percorso viaggio&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;http://maps.google.com/maps?f=d&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;hl=en&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;saddr=LATITUDINE-ORIGINE,LONGITUDINE-ORIGINE&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;daddr=LATITUDINE-DESTINAZIONE,LONGITUDINE-DESTINAZIONE&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;ie=UTF8&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;0&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;om=0&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;output=kml&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Mettiamo tutto in funzione e vediamo cosa apparirà su Telegram.&lt;/p&gt;

&lt;p&gt;Il BOT da cercare si chiama &lt;a href=&quot;http://telegram.me/protezioneCivilePAbot&quot;&gt;@protezioneCivilePAbot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;La prima cosa da fare è inviare la propria posizione cliccando sulla graffetta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/protezione-civile-screenshot1.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A questo punto il BOT risponderà nel seguente modo:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/protezione-civile-screenshot2.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;informando l’utente su quale area di accoglienza raggiungere, visualizzandola su mappa,
su come raggiungerla e su quanto tempo ci vorrà a piedi per raggiungerla.&lt;/p&gt;

&lt;p&gt;Il codice della demo, lo trovate nel mio repository si &lt;a href=&quot;https://github.com/gpirrotta/protezione-civile-bot&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Il progetto è scalabile per ogni città, basta avere un file GeoJSON,
prodotto con Umap o con qualsiasi altro tool, con le aree di accoglienza della Protezione Civile.&lt;/p&gt;

&lt;p&gt;Un ringraziamento particolare per il progetto va a Ciro Spataro, da cui è nata l’idea e
ad Andrea Borruso, per i suoi preziosi feedback e consigli.&lt;/p&gt;

&lt;p&gt;Se questo progetto vi è piaciuto un pò, mi aiutate a farlo conoscere in giro? Grazie&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Twittami&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/share?url=https://telegram.me/protezioneCivilePABot&amp;amp;text=@gpirrotta+ProtezioneCivilePABot+-+Il+BOT+che+può+salvarti+la+vita+in+caso+di+emergenze&quot;&gt;&lt;img src=&quot;/images/twitter.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s all folks! Stay tuned!&lt;/p&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">Ok, lo confesso, mi sto facendo prendere un pò troppo la mano da Telegram e il suo BOT, ma non è colpa mia se hanno reso così semplice e disarmante creare servizi di valore con la loro chat. :-) Succede, però, che un lunedì mattina ricevo una email di Andrea Borruso, il quale mi propone, su un’idea di Ciro Spataro, di sviluppare un BOT che consenta ai cittadini palermitani, in caso di emergenza, di essere informati tempestivamente sulla posizione delle aree di accoglienza da raggiungere, predisposte dalla Protezione Civile di Palermo.</summary></entry><entry><title type="html">Developing an Ontology</title><link href="http://giovanni.pirrotta.it/blog/2015/10/18/developing-an-ontology/" rel="alternate" type="text/html" title="Developing an Ontology" /><published>2015-10-18T15:23:00+00:00</published><updated>2015-10-18T15:23:00+00:00</updated><id>http://giovanni.pirrotta.it/blog/2015/10/18/developing-an-ontology</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2015/10/18/developing-an-ontology/">&lt;p&gt;The term ontology has its origin in philosophy; in the framework of
computer science, it represents a formal representation of knowledge
as a set of concepts within a domain, and the relationships between
these concepts.&lt;/p&gt;

&lt;!--More--&gt;

&lt;p&gt;&lt;img src=&quot;/images/ontology.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the literature we can find many other definitions to explain and define what ontology
represents and means.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Defines the concepts and relationships used to describe and represent
an area of knowledge (&lt;em&gt;Ivan Herman, W3C&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;A taxonomy combined with inference rules (&lt;em&gt;T. Berners–Lee, J.Hendler, O. Lassila, W3C&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;The theory or study of being as such; i.e., of the basic characteristics
of all reality (&lt;em&gt;Encyclopedia Britannica&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;The science of something and of nothing, of being and not–being,
of the thing and the mode of the thing, of substance and accident
(&lt;em&gt;Gottfried Wilhelm Leibniz - Sämtliche schriften und briefe.&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;A formal definition of concepts (entities, relationships) of a given
area of knowledge, described in a standardized form (&lt;em&gt;Carugo &amp;amp;
Pongor, 2002&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;A systematic arrangement of all of the important categories of objects
or concepts which exist in some field of discourse, showing
the relations between them. (&lt;em&gt;Collaborative International Dictionary
of English&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;An ontology can be defined as a structured and limited concept
catalog not unambiguously defined (&lt;em&gt;Uitermark&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The term ontology is used in artificial intelligence, in the Semantic
Web, in systems engineering, in software engineering, in biomedical
informatics, in library science, in enterprise bookmarking and information
architecture as a form of knowledge representation about the
world or some part of it.&lt;/p&gt;

&lt;p&gt;Ontologies have become common on the
World Wide Web. The W3C Consortium developed the RDF Model,
a language for encoding knowledge on Web pages to make it understandable
to electronic agents. An ontology is the final result of a knowledge engineering process, a
well–defined schema allows us to unambiguously define concepts and
relationships over a specific knowledge domain.&lt;/p&gt;

&lt;p&gt;As an ontology is an explicit description qualitatively advanced of
domain concepts, it can be published and reused for different purposes,
even if they were not included when it was created. Starting
from standardized ontologies, it becomes much easier to develop their
more specific ontology reusing and extending the existing ones.&lt;/p&gt;

&lt;p&gt;Now we will see briefly the steps to follow in the knowledge engineering
process.&lt;/p&gt;

&lt;h2 id=&quot;domain-definition&quot;&gt;Domain Definition&lt;/h2&gt;
&lt;p&gt;The starting point is the domain to model.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We have to specifically define the ontology domain.&lt;/li&gt;
  &lt;li&gt;We have to define what use you intend to do with the ontology.&lt;/li&gt;
  &lt;li&gt;For what types of questions the information in the ontology should
provide answers?&lt;/li&gt;
  &lt;li&gt;Who will use and maintain the ontology?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the ways to understand the domain of the ontology is to
sketch a list of questions that a knowledge base relying on the ontology
should be able to answer. This task is called &lt;em&gt;competency questions&lt;/em&gt;
(&lt;em&gt;Gruninger and Fox&lt;/em&gt;) and is useful to understand if the ontology
includes sufficient information or needs further details. The ontology
development is an iterative process and there are many correct ways
to model a domain, so the question list should not necessarily be exhaustive.&lt;/p&gt;

&lt;h2 id=&quot;reusing-existing-ontology&quot;&gt;Reusing Existing Ontology&lt;/h2&gt;
&lt;p&gt;Rather than reinvent the wheel, a very important aspect in the ontology
development process is to consider reusing existing ontologies.
As someone might have already defined an ontology about the same
topic, it should be better to reuse and extend it for a specific purpose,
thus saving a lot of hard work, instead of rewriting a new one.
We can find hundreds of ontologies for any field of application.&lt;/p&gt;

&lt;p&gt;Some of the most famous ontologies in the Semantic Web area are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.dublincore.org/documents/dces/&quot;&gt;&lt;em&gt;Dublin Core&lt;/em&gt;&lt;/a&gt;.
Dublin core ontology provides a simple and standardized
set of conventions for describing things online in ways
that make them easier to find. Dublin Core is widely used to
describe digital materials such as video, sound, image, text, and
composite media like Web pages.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmlns.com/foaf/spec/&quot;&gt;&lt;em&gt;FOAF&lt;/em&gt;&lt;/a&gt;. The Friend of a Friend (FOAF) Ontology, defined using
OWL language, is an RDF extension created to define people,
their activity and their relationships with other people and other
objects. The FOAF project is creating a Web of machine–readable
pages describing people, the links between them and the things
they create and do.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/skos-primer/&quot;&gt;SKOS&lt;/a&gt;. Simple Knowledge Organization System Ontology
is a common data model for sharing and linking knowledge organization
systems, such as thesauri, taxonomies, classification schemes and subject heading systems,
share a similar structure, via the Web.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;identifying-concepts&quot;&gt;Identifying Concepts&lt;/h2&gt;

&lt;p&gt;At this point, the goal is to extract and list all terms relative to the
model. After collecting the most important words, we have to identify
terms representing concepts, preferring to use nouns, and terms representing
relations. Moreover, we have to define the hierarchical relation
between concepts and we can use three approaches:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Top-down:&lt;/strong&gt; we start from the more general concepts to more
specific ones, up to the desired level of detail;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bottom-up:&lt;/strong&gt; we start from the more specific concepts and go up
the hierarchy to the more general concepts;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Hybrid:&lt;/strong&gt; we start from the concepts of more immediate detection,
to specify or abstract them where necessary.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;identifying-properties&quot;&gt;Identifying Properties&lt;/h2&gt;
&lt;p&gt;Starting from the above same term list we have to identify relationships
between concepts identified in the previous step. Depending on
property type, we can identify &lt;em&gt;intrinsic&lt;/em&gt; properties which are those relating
to the concept content, independently of other things, including
its context and &lt;em&gt;extrinsic&lt;/em&gt; properties which are those depending on a
thing’s relationship with other things.
To correctly model a specific domain, we need to define some ontology
constraints to ensure instance consistency and validity. The most
commonly used constraints are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;cardinality constraints&lt;/strong&gt;: to specify the minimun and/or maximum
relationship cardinality between concepts. For example, each son
has exactly one mother and one father, and so forth;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;value type constraints&lt;/strong&gt;: to specify the literal value types. For example
string, number, boolean, date, etc;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;domain constraints&lt;/strong&gt;: to specify what instance types the properties
accept as subject;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;range constraints&lt;/strong&gt;: to specify what instance types the properties
accept as object.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Natalya F. Noy and Deborah L. McGuinness&lt;/em&gt; -  Ontology
 development 101: A guide to creating your first ontology.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Dean Allemang and Jim Hendler&lt;/em&gt; -  SemanticWeb for the Working Ontologist:
 Effective Modeling in RDFS and OWL. Morgan Kaufmann,
 2008&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;M. Gruninger and Fox&lt;/em&gt; -  Methodology for the design and evaluation
 of ontologies. In In: Proceedings of the Workshop on Basic
 Ontological Issues in Knowledge Sharing IJCAI, Montreal, 1995.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;John Davies, Dieter Fensel, and Frank van Harmelen&lt;/em&gt; -  Towards the
Semantic Web, Ontology-driven Knowledge Management. Wiley, 2002&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">The term ontology has its origin in philosophy; in the framework of computer science, it represents a formal representation of knowledge as a set of concepts within a domain, and the relationships between these concepts.</summary></entry><entry><title type="html">Trasporti Amat di Palermo? C’è un Telegram per te! (aggiornato)</title><link href="http://giovanni.pirrotta.it/blog/2015/10/09/stazione-amat-di-palermo-ce-un-telegram-per-te/" rel="alternate" type="text/html" title="Trasporti Amat di Palermo? C'è un Telegram per te! (aggiornato)" /><published>2015-10-09T17:00:00+00:00</published><updated>2015-10-09T17:00:00+00:00</updated><id>http://giovanni.pirrotta.it/blog/2015/10/09/stazione-amat-di-palermo-ce-un-telegram-per-te</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2015/10/09/stazione-amat-di-palermo-ce-un-telegram-per-te/">&lt;p&gt;In questi ultimi tempi in rete si fa un gran parlare di &lt;strong&gt;BOT&lt;/strong&gt; (abbreviazione di robot), ovvero quei programmi che fanno credere
all’utente di parlare con una persona reale ma che di fatto sono risponditori automatici utili per fornire servizi vari
come ad esempio il meteo, news, quiz, sondaggi, giochi, etc.&lt;/p&gt;

&lt;p&gt;Il motivo di tutto questo proliferare di BOT è dovuto principalmente all’apertura di &lt;a href=&quot;https://telegram.org/&quot;&gt;Telegram&lt;/a&gt;,
nella sua versione 3, al mondo degli sviluppatori. Attraverso l’utilizzo di API ufficiali, infatti, è ora possibile creare,
gestire e interagire con programmi BOT, personalizzandoli secondo le proprie esigenze.&lt;/p&gt;

&lt;!--More--&gt;

&lt;p&gt;Ho sempre visto un alto potenziale nell’uso di questo tipo di applicazioni e la scelta di Telegram potrebbe rivelarsi
particolarmente azzeccata in questo senso.&lt;/p&gt;

&lt;p&gt;Esattamente due anni fa anch’io ho iniziato a interessarmi di BOT, ad immaginarmi il mio smartphone come un telecomando da
pigiare per ottenere specifici servizi: informazioni sui programmi televisivi, previsioni meteo, eventi serali della mia città,
orari di apertura degli uffici pubblici, etc.
Ho sviluppato quindi un BOT su &lt;a href=&quot;http://www.twitter.com&quot;&gt;Twitter&lt;/a&gt; grazie al quale, con un semplice
tweet e una microgrammatica, riuscivo ad inviare richieste ad un’applicazione per ottenere informazioni sui programmi televisivi della serata.
Descrivo nel dettaglio l’implementazione del progetto, che si chiama per l’appunto &lt;strong&gt;cosaceintv&lt;/strong&gt;,
in questo &lt;a href=&quot;http://giovanni.pirrotta.it/blog/2013/10/04/cosaceintv-la-guida-tv-a-portata-di-tweet/&quot;&gt;post&lt;/a&gt;;
il sito del progetto è &lt;a href=&quot;http://www.cosaceintv.it&quot;&gt;cosaceintv.it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tuttavia Twitter non consente di creare  BOT in modo nativo per cui, per raggiungere
 lo scopo, sono dovuto scendere a compromessi, chiamateli &lt;em&gt;workaround&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ma con Telegram la situazione cambia&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Vero è che l’app non è diffusa come &lt;a href=&quot;https://www.whatsapp.com/&quot;&gt;WhatsApp&lt;/a&gt;, l’attuale &lt;em&gt;killer application&lt;/em&gt; nel settore
dell’instant messaging, (molti si aspettavano dei segnali di apertura API da WhatsApp in occasione
dell’ultima conferenza &lt;a href=&quot;https://fbf8.com/&quot;&gt;F8&lt;/a&gt; di Facebook, ma invece &lt;strong&gt;nisba&lt;/strong&gt;) ma è anche vero che Telegram sta guadagnando sempre più terreno grazie soprattutto a
scelte aziendali che si stanno rivelando strategicamente vincenti, come ad esempio&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;il rilascio del sorgente in opensource,&lt;/li&gt;
  &lt;li&gt;l’alta attenzione nei confronti della sicurezza e della privacy degli utenti,&lt;/li&gt;
  &lt;li&gt;la possibilità di creare chat segrete e autodistruggenti dopo un tempo prestabilito,&lt;/li&gt;
  &lt;li&gt;un design pulito e gradevole,&lt;/li&gt;
  &lt;li&gt;la totale gratuita,&lt;/li&gt;
  &lt;li&gt;l’assenza di pubblicità&lt;/li&gt;
  &lt;li&gt;ed infine, non meno importante, l’ultima feature aggiunta cioè la possibilità di creare BOT per la gestione di servizi personalizzati e l’interazione in modo programmatico attraverso API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Più che una semplice app di messaggistica Telegram è di fatto una vera e propria piattaforma e in
 rete si trovano già applicazioni BOT di qualsiasi tipo; le più popolari si possono trovare
 al seguente &lt;a href=&quot;http://storebot.me/top/&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ma anche in Italia cominciano a vedersi progetti interessanti.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A Prato &lt;a href=&quot;https://twitter.com/il_tempe&quot;&gt;Matteo Tempestini&lt;/a&gt; ha sviluppato il &lt;a href=&quot;https://telegram.me/emergenzeprato_bot&quot;&gt;BOT Emergenze Prato&lt;/a&gt;
per essere aggiornati in tempo reale su condizioni meteo, possibili allerte e segnalazioni.
A Lecce, utilizzando gli opendata del comune e non solo, &lt;a href=&quot;https://twitter.com/piersoft&quot;&gt;Pier Paolo Paolicelli (piersoft)&lt;/a&gt; ha sviluppato
[OpenDataLecceBot]((https://telegram.me/opendataleccebot) con il quale è possibile ottenere informazioni su meteo,
temperatura, qualità dell’aria, orari delle scuole, tariffe aree ZTL, eventi culturali, etc.
Il servizio trasporti bus &lt;a href=&quot;http://www.tper.it/&quot;&gt;TPER&lt;/a&gt; fornisce informazioni aggiornate sui bus di
Bologna usando i servizi informativi e gli opendata. (&lt;a href=&quot;https://telegram.me/tperbot&quot;&gt;tperbot&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Incuriosito quindi da tutto questo fermento mi è venuta voglia di rimettermi in gioco anch’io con i BOT e smanettare
un pò con questa piattaforma.
Ho accolto, quindi, il suggerimento di &lt;strong&gt;piersoft&lt;/strong&gt; che consigliava di replicare il servizio offerto dalla TPER di Bologna sui trasporti anche per la città di Palermo,
dato che i dati sui trasporti palermitani sono &lt;a href=&quot;http://www.amat.pa.it/index.php?option=com_content&amp;amp;view=article&amp;amp;id=1090&amp;amp;Itemid=287&quot;&gt;rilasciati&lt;/a&gt;
dall’ azienda AMAT in formato GTFS con licenza OpenData.&lt;/p&gt;

&lt;p&gt;La specifica &lt;a href=&quot;https://developers.google.com/transit/gtfs/reference&quot;&gt;GTFS&lt;/a&gt; (General Transit Feed Specification) è stata sviluppata
da Google e definisce un formato comune per rappresentare informazioni orarie di un sistema di trasporti
(bus, metro, treno, etc) associandole ad informazioni geografiche.&lt;/p&gt;

&lt;p&gt;La specifica struttura i dati organizzandoli in un insieme di file CSV.&lt;/p&gt;

&lt;p&gt;I più importanti sono i seguenti:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;agency&lt;/strong&gt; - informazioni inerenti l’azienda che gestisce i trasporti;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;routes&lt;/strong&gt; - informazioni sulle linee dei trasporti;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;trips&lt;/strong&gt; - informazioni inerenti le corse per ciascuna linea;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;stops&lt;/strong&gt; - le fermate geolocalizzate;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;stop_times&lt;/strong&gt; - l’orario di arrivo e partenza e la sequenza per ogni corsa in ciascuna fermata;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;calendar&lt;/strong&gt; - periodo del servizio trasporti su base settimanale;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;calendar_dates&lt;/strong&gt; - date in cui vi sono delle eccezioni rispetto a quanto descritto
in &lt;em&gt;calendar&lt;/em&gt; (ad. es. feste)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Per la specifica completa si rimanda alla &lt;a href=&quot;https://developers.google.com/transit/gtfs/reference&quot;&gt;pagina ufficiale GTFS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quindi mettiamoci al lavoro e scarichiamo i dati dal sito AMAT di Palermo.&lt;/p&gt;

&lt;p&gt;###Ma cosa vedono i miei occhi???&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/crying-meme.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;~~ Dalla pagina AMAT Palermo, sezione OpenData, i dati GTFS risultano &lt;strong&gt;aggiornati al 2014&lt;/strong&gt;
purtroppo!~~&lt;/p&gt;

&lt;p&gt;~~ In un settore come quello dei trasporti, il rilascio continuo di dati aggiornati aperti
e riutilizzabili rappresenta una condizione necessaria per lo sviluppo di qualsiasi
applicazione che voglia essere realmente utile ed efficace per cittadini.~~&lt;/p&gt;

&lt;p&gt;** Ho preso una cantonata, dopo aver pubblicato il post il buon &lt;a href=&quot;http://twitter.com/aborruso&quot;&gt;Andrea Borruso&lt;/a&gt; mi ha fatto notare
che in rete ci sono i dati GTFS dell’azienda AMAT relativi all’anno 2015 e la pagina di riferimento è quella del Comune
di Palermo, non quella dell’Azienda AMAT. Grazie Andrea! **&lt;/p&gt;

&lt;p&gt;Ad agosto ho sviluppato una demo per spiegare come riutilizzare i dati relativi alle tariffe orarie delle ZTL
a Messina, aumentandone di fatto il valore, se questi fossero stati rilasciati in modalità OpenData dall’azienda ATM.
Ne parlo in questo &lt;a href=&quot;http://giovanni.pirrotta.it/blog/2015/08/12/parking-messina-quando-la-ztl-incontra-gli-open-data/&quot;&gt;post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Allo stesso modo spiegherò in questo post come realizzare un BOT su Telegram in grado di fornire informazioni sui
trasporti AMAT di Palermo, un modo intelligente di riuso dei dati aperti ~~ che possa servire per &lt;em&gt;punzolare&lt;/em&gt;
l’azienda AMAT al rilascio dei dati aggiornati.~~&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mettiamoci al lavoro!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;~~ Per prima cosa scarico il file zippato GTFS dalla &lt;a href=&quot;http://www.amat.pa.it/index.php?option=com_content&amp;amp;view=article&amp;amp;id=1090&amp;amp;Itemid=287&quot;&gt;pagina&lt;/a&gt; OpenData AMAT Palermo.~~&lt;/p&gt;

&lt;p&gt;Per prima cosa scarico il file zippato GTFS dalla &lt;a href=&quot;http://www.comune.palermo.it/opendata_dld.php?id=349&quot;&gt;pagina&lt;/a&gt; OpenData del Comune di  Palermo.&lt;/p&gt;

&lt;p&gt;Decido di caricare tutti i file CSV all’interno di un dabatase Mysql, per cui inizio a cercare in rete degli
&lt;a href=&quot;https://en.wikipedia.org/wiki/Data_definition_language&quot;&gt;statement DDL&lt;/a&gt; in modo da risparmiarmi il creare tutto a manina.
Uno potrebbe pensare che, essendo GTFS un formato ben definito, uno schema DDL vale l’altro.&lt;/p&gt;

&lt;p&gt;###Errore!!!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Quelli che seguono sono alcuni consigli che vi potrebbero farvi risparmiare tempo e mal di testa quando decidete di creare
uno schema GTFS trovato in rete.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;####REGOLE D’ORO&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Analizzare &lt;strong&gt;sempre&lt;/strong&gt; e &lt;strong&gt;bene&lt;/strong&gt; la qualità dei dati da importare &lt;strong&gt;prima&lt;/strong&gt; di importarli&lt;/li&gt;
  &lt;li&gt;GOTO 1 ;-)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;La maggior parte dei campi &lt;strong&gt;id&lt;/strong&gt; degli schemi che ho trovano in rete è in formato intero
mentre nella maggior parte dei record dei dati GTFS AMAT il campo &lt;strong&gt;id&lt;/strong&gt; contiene anche valori
alfanumerici, ergo trasformate tutti gli id da &lt;strong&gt;int&lt;/strong&gt; a &lt;strong&gt;varchar&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Per importare i dati automaticamente ho usato uno script in python scaricato da github.
Trovate un fork sul mio repository github in quanto lo script conteneva un bug relativo al
caricamento di codici
alfanumerici contenenti il carattere &lt;strong&gt;E&lt;/strong&gt;. Lo script erroneamente parsava i codici contenenti
il carattere &lt;strong&gt;E&lt;/strong&gt; come formato esadecimale considerandoli interi invece di stringa.
Trovate la versione fixata nel mio &lt;a href=&quot;https://github.com/gpirrotta/py-gtfs-mysql&quot;&gt;repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A questo punto iniziamo a scrivere un pò di codice. La documentazione di riferimento per
creare BOT con Telegram è fatta benissimo e la trovate al seguente
&lt;a href=&quot;https://core.telegram.org/bots/api&quot;&gt;link&lt;/a&gt;.
Per lo sviluppo del codice ho usato questa &lt;a href=&quot;https://github.com/irazasyed/telegram-bot-sdk&quot;&gt;libreria PHP&lt;/a&gt;
 a sua volta descritta in modo molto chiaro &lt;a href=&quot;https://irazasyed.github.io/telegram-bot-sdk/&quot;&gt;qui&lt;/a&gt;. La libreria è stata sviluppata per il framework PHP
&lt;a href=&quot;http://laravel.com/&quot;&gt;Laravel&lt;/a&gt;
ma può essere utilizzata anche in modalità standalone.&lt;/p&gt;

&lt;p&gt;La prima cosa da fare è creare il bot. Per fare questo bisogna aggiungere sul proprio
client Telegram l’utente &lt;strong&gt;@BotFather&lt;/strong&gt; e inviargli il seguente comando &lt;strong&gt;/newbot&lt;/strong&gt;.
Dopo aver risposto ad alcune domande, ad esempio nome ed username del BOT, viene generato
un &lt;strong&gt;TOKEN&lt;/strong&gt; che rappresenta il ponte di collegamento tra il nostro software e Telegram.
Per maggiori dettagli sulla creazione dei bot fate riferimento alla documentazione ufficiale.&lt;/p&gt;

&lt;p&gt;Per poter interagire con Telegram scriviamo quindi:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $telegram = new Api('BOT TOKEN');
    $response = $telegram-&amp;gt;getMe();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Nella &lt;em&gt;response&lt;/em&gt; troveremo informazioni sul bot creato.&lt;/p&gt;

&lt;p&gt;Per poter inviare messaggi all’utente bisognerà indicare, oltre al messaggio, anche l’&lt;strong&gt;ID&lt;/strong&gt; della chat in modo che
solo l’utente che ha fatto la richiesta possa ricevere il messaggio di ritorno.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  Telegram&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;$response = $telegram-&amp;gt;sendMessage('CHAT_ID', 'Hello World');&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Oltre a messaggi di testo il nostro BOT può rispondere anche con immagini, audio, video, allegati, etc.:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$response = $telegram-&amp;gt;sendPhoto('CHAT_ID', 'path/to/photo.jpg', 'Some caption');
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ma come fa l’utente a chiedere le informazioni al BOT? Inviando dei &lt;strong&gt;comandi&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Per creare un comando, usando la libreria PHP, è necessario estendere la classe &lt;strong&gt;Command&lt;/strong&gt; e implementare il metodo
 &lt;strong&gt;handle&lt;/strong&gt;.
Creare un comando è un’operazione veramente banale, è infatti necessario inizializzare semplicemente la variabile &lt;em&gt;name&lt;/em&gt;
con il nome del comando che si vuole creare. Nell’esempio si sta creando il comando &lt;em&gt;/start&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Nell’esempio che segue, digitando da Telegram il comando &lt;em&gt;/start&lt;/em&gt; il BOT risponderà con &lt;strong&gt;Hello World!&lt;/strong&gt;;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Telegram\Bot\Commands\Command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StartCommand&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Command&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Start Command to get you started&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replyWithMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hello World!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Non mi soffermerò oltre su questa libreria perchè, come già detto, è presente una documentazione completa ed esaustiva.&lt;/p&gt;

&lt;p&gt;Vediamo adesso le feature più importanti che dovrà avere il nostro BOT.
Verranno descritte le più importanti scelte adottate per la logica applicativa.
Si tratta essenzialmente di recuperare informazioni dal database e di formattare l’output, ci soffermeremo quindi
solo sulle query &lt;em&gt;SQL&lt;/em&gt; più importanti.&lt;/p&gt;

&lt;p&gt;La prima versione di &lt;strong&gt;amatPABot&lt;/strong&gt;, questo il nome del BOT, implementa due funzionalità:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Orario Linee&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fermata più vicina&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/amat-bot-2.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;###Orario Linee&lt;/p&gt;

&lt;p&gt;Le informazioni sono tutte presenti nel db per cui all’interno del metodo &lt;em&gt;handle&lt;/em&gt; viene
gestita la logica per estrarre le informazioni relative alle linee AMAT di Palermo.&lt;/p&gt;

&lt;p&gt;La query SQL utilizzata per mostrare le linee:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  SQL&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_long_name&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;routes&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;asc&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/amat-bot-3.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A questo punto viene mostrato l’elenco delle linee AMAT. L’utente può scegliere la linea
di cui vuole sapere gli orari. Una volta scelta la linea un nuovo comando recupererà
il nome delle fermate della linea (Andata e ritorno) e gli orari relativi.&lt;/p&gt;

&lt;p&gt;Per recuperare gli orari delle corse uso la seguente query SQL, passandogli l’id della linea e l’id del servizio, cioè
del periodo di riferimento nel calendario.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  SQL&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trips&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trip_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trip_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;       &lt;span class=&quot;n&quot;&gt;trips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;route_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;route_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service_id&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trip_id&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;A questo punto l’output ottenuto è il seguente:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/amat-bot-4.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Passiamo adesso all’altra funzionalità.&lt;/p&gt;

&lt;p&gt;###Fermata più vicina&lt;/p&gt;

&lt;p&gt;Per ottenere informazioni sulla fermata più vicina  dobbiamo per prima cosa cliccare sulla graffetta e inviare la
nostra posizione geografica.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/graffetta-amat.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posizione-amat.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fatto ciò un comando calcolerà le 5 fermate più vicine recuperandole dalla tabella &lt;em&gt;stops&lt;/em&gt; eseguendo la seguente query:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  SQL&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_lon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6371&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;              &lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_lat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;              &lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;              &lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_lon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;              &lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;              &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stops&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;250000&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;10&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Il valore &lt;em&gt;6371&lt;/em&gt; è la lunghezza del raggio della terra. La formula utilizzata calcola la distanza in &lt;strong&gt;KM&lt;/strong&gt;
tra due punti espressi in latitudine e longitudine. Si tratta di una variante dell’&lt;em&gt;Haversine Formula&lt;/em&gt;,
per maggiori informazioni fate riferimento &lt;a href=&quot;https://en.wikipedia.org/wiki/Haversine_formula&quot;&gt;qui&lt;/a&gt; e
&lt;a href=&quot;http://www.codecodex.com/wiki/Calculate_distance_between_two_points_on_a_globe#Haversine_Formula&quot;&gt;qui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Per ogni fermata recupero anche il nome delle linee passanti.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;figcaption class=&quot;code-highlight-caption&quot;&gt;&lt;span class=&quot;code-highlight-caption-title&quot;&gt;  SQL&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_id&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trips&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_id&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trip_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trip_id&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_id&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_id&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Vengono mostrate a video le 5 fermate più vicine con le relative linee passanti.
La prima fermata viene visualizzata su una mappa (si lo so, è Google Maps e non OpenStreetMap; nativamente Telegram usa le
mappe di Google per inviare al client le posizioni geografiche; per usare OSM si potrebbero, ad esempio, creare al volo
immagini statiche e inviarle all’utente per la posizione delle fermate)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/risposta-fermate.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Per il &lt;em&gt;deploy&lt;/em&gt; del BOT ho usato &lt;a href=&quot;w.cloudflare.com/ssl&quot;&gt;Cloudflare&lt;/a&gt; per avere una
connessione SSL, condizione necessaria per poter utilizzare il &lt;a href=&quot;https://core.telegram.org/bots/api#setwebhook&quot;&gt;WebHook&lt;/a&gt;
in Telegram, invece del metodo manuale &lt;a href=&quot;https://core.telegram.org/bots/api#getting-updates&quot;&gt;getUpdates&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;###Ricapitolando&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;I dati mostrati dal BOT non sono aggiornati al 2015 ma all’ultimo trimestre 2014;&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;Il BOT è funzionante con i dati aggiornati al 2015;&lt;/li&gt;
  &lt;li&gt;Sulla correttezza e consistenza dei dati non garantisco. Non prendetevela con me
per eventuali inesattezze e/o sbagli :-)&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;E’ possibile aggiungere tante altre funzionalità ma la vera &lt;strong&gt;mission&lt;/strong&gt; di questa prima versione è costringere
l’AMAT di Palermo al rilascio dei dati aggiornati al 2015.&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;Il BOT sviluppato è &lt;em&gt;ancora&lt;/em&gt; una demo. E’ possibile aggiungere altre funzionalità, il limite è la fantasia.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Per interagire con il bot dovete aggiungere al vostro client Telegram il contatto: &lt;a href=&quot;https://telegram.me/amatpabot&quot;&gt;@amatPABot&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://telegram.me/amatpabot&quot;&gt;&lt;img src=&quot;/images/AMATBOTlogo.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Il codice sorgente lo trovate &lt;a href=&quot;https://github.com/gpirrotta/amat-pa-bot&quot;&gt;qui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attenzione, è’ una versione ancora poco stabile, non pronta per andare in produzione.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;~~ I dati non sono aggiornati quindi, &lt;em&gt;in questo momento&lt;/em&gt;, il BOT non è molto utile; però,~~ Se questo lavoro vi è
piaciuto un pò, potreste contribuire &lt;del&gt;alla causa aiutandomi a fare un pò di tam-tam mediatico sui social network.&lt;/del&gt;
a farlo conoscere in giro sui social, grazie.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Twittami&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/share?url=https://telegram.me/amatpabot&amp;amp;text=@gpirrotta+AmatPABot+-+AMAT+Palermo+BOT+Informazioni+trasporti+pubblici&quot;&gt;&lt;img src=&quot;/images/twitter.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Idee, critiche e suggerimenti sono benvenuti.&lt;/p&gt;

&lt;p&gt;That’s all folks! Stay tuned!&lt;/p&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">In questi ultimi tempi in rete si fa un gran parlare di BOT (abbreviazione di robot), ovvero quei programmi che fanno credere all’utente di parlare con una persona reale ma che di fatto sono risponditori automatici utili per fornire servizi vari come ad esempio il meteo, news, quiz, sondaggi, giochi, etc. Il motivo di tutto questo proliferare di BOT è dovuto principalmente all’apertura di Telegram, nella sua versione 3, al mondo degli sviluppatori. Attraverso l’utilizzo di API ufficiali, infatti, è ora possibile creare, gestire e interagire con programmi BOT, personalizzandoli secondo le proprie esigenze.</summary></entry><entry><title type="html">Parking In Messina. quando la ZTL incontra gli Open Data</title><link href="http://giovanni.pirrotta.it/blog/2015/08/12/parking-messina-quando-la-ztl-incontra-gli-open-data/" rel="alternate" type="text/html" title="Parking In Messina. quando la ZTL incontra gli Open Data" /><published>2015-08-12T06:00:00+00:00</published><updated>2015-08-12T06:00:00+00:00</updated><id>http://giovanni.pirrotta.it/blog/2015/08/12/parking-messina-quando-la-ztl-incontra-gli-open-data</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2015/08/12/parking-messina-quando-la-ztl-incontra-gli-open-data/">&lt;p&gt;Metti che è da una vita che non aggiorno questo blog, metti che sono sostenitore da
tanti anni degli &lt;a href=&quot;https://it.wikipedia.org/wiki/Dati_aperti&quot; target=&quot;blank&quot;&gt;Open Data&lt;/a&gt; e di tutto ciò che gli gira attorno, metti che finalmente sono in ferie e ho
qualche giorno libero da dedicare a qualche idea che mi porto dietro da qualche mese, bene, metti insieme tutto questo :-)&lt;/p&gt;

&lt;p&gt;Ma partiamo dall’inizio, a circa un mese fa.&lt;/p&gt;

&lt;!--More--&gt;

&lt;p&gt;Lo scorso &lt;strong&gt;10-11-12 luglio&lt;/strong&gt; si è svolta a Patti (ME) l’&lt;a href=&quot;http://www.lostrettodigitale.org/summer-school-su-opendata-il-programma/&quot; target=&quot;blank&quot;&gt;Open Data Summer School&lt;/a&gt;,
organizzata dallo &lt;a href=&quot;http://www.lostrettodigitale.org/&quot; target=&quot;blank&quot;&gt;Stretto Digitale &lt;/a&gt;
nei locali del &lt;a href=&quot;https://caffegalante.wordpress.com/&quot; target=&quot;blank&quot;&gt;caffè Galante&lt;/a&gt;.
Ovviamente non potevo lasciarmi scappare un’occasione del genere e nei tre giorni ho avuto l’opportunità di conoscere
pilastri del movimento Open Data italiani come &lt;a href=&quot;https://twitter.com/piersoft&quot; target=&quot;blank&quot;&gt;Pier Francesco Paolicelli (Piersoft)&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/aborruso&quot; target=&quot;blank&quot;&gt;Andrea Borruso&lt;/a&gt; e
&lt;a href=&quot;https://twitter.com/nelsonmau&quot; target=&quot;blank&quot;&gt;Andrea Nelson Mauro&lt;/a&gt;.
Sono stati giorni intensissimi nei quali ciascuno dei relatori ha condiviso la propria esperienza e la propria passione,
mostrando esempi concreti di come sia possibile riusare i dati aperti in altri contesti, per accrescerne il valore originale,
scoprendo ad esempio relazioni nuove dei dati con altre informazioni apparentemente sconnesse.
Tutto questo servendosi di mappe, tool per estrarre e/o convertire pdf, per creare grafici, diagrammi e infografiche.
Per un resoconto dettagliato dell’evento invito a leggere l’ottimo
&lt;a href=&quot;https://caffegalante.wordpress.com/2015/08/10/la-summer-school-sugli-open-data-de-lo-stretto-digitale/&quot; target=&quot;blank&quot;&gt;post&lt;/a&gt; di
&lt;a href=&quot;https://twitter.com/picomiles&quot; target=&quot;blank&quot;&gt;Nino Galante&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In passato ho avuto modo di lavorare con gli Open Data sia per motivi di ricerca in ambito Semantic Web
(&lt;a target=&quot;blank&quot; href=&quot;http://www.linkedopendata.it/datasets/loius-linking-italian-university-statistics-project&quot;&gt;LOIUS Platform&lt;/a&gt;),
sia per progetti personali (&lt;a target=&quot;blank&quot; href=&quot;http://giovanni.pirrotta.it/blog/2013/07/22/openalbopretorio-apriti-sesamo/&quot;&gt; OpenAlboPretorio&lt;/a&gt;,
&lt;a target=&quot;blank&quot; href=&quot;http://giovanni.pirrotta.it/blog/2013/08/28/opengazzettaufficiale-la-legge-e-open-per-tutti/&quot;&gt;OpenGazzettaUfficiale&lt;/a&gt; - offline -,
&lt;a target=&quot;blank&quot; href=&quot;https://github.com/gpirrotta/opensanita&quot;&gt;OpenSanita&lt;/a&gt;).
Secondo i principi &lt;strong&gt;Open Data&lt;/strong&gt; i dati andrebbero trattati come &lt;strong&gt;beni comuni&lt;/strong&gt;, in quanto appartenenti al genere umano.
Per definirsi &lt;strong&gt;Open Data&lt;/strong&gt; i dati&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;devono essere disponibili secondo i termini di una licenza che ne permetta l’utilizzo da parte di chiunque, anche
 per finalità commerciali, in formato disaggregato;&lt;/li&gt;
  &lt;li&gt;devono essere accessibili attraverso le tecnologie dell’informazione in formati aperti e in modo automatico da parte di programmi;&lt;/li&gt;
  &lt;li&gt;devono essere resi disponibili gratuitamente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Durante la summer school i relatori hanno presentato svariati esempi di mashup di dati,
utilizzando diversi tool, script e programmi, integrandoli maggiormente con le mappe di &lt;a target=&quot;blank&quot; href=&quot;http://www.openstreetmap.org/&quot;&gt;OpenStreetMap &lt;/a&gt;
(OSM), progetto collaborativo finalizzato a creare mappe a contenuto libero del mondo.
Il progetto rappresenta una raccolta mondiale di dati geografici avente come scopo principale la creazione di mappe e cartografie.&lt;/p&gt;

&lt;p&gt;Sono rimasto particolarmente colpito quando Piersoft, a proposito di Smart Cities e Open Data, ha fatto cenno
ad una APP per smartphone, sviluppata non ricordo per quale città, in grado di calcolare la tariffa oraria per i
parcheggi in zona ZTL, in base alla posizione GPS dello smartphone. Mi sono portato a casa quell’idea e il desiderio
di sperimentare qualcosa del genere anche per la città in cui lavoro, ovvero Messina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/challenge_accepted.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Andando sul sito dell’&lt;a href=&quot;http://www.atmmessina.it&quot; target=&quot;blank&quot;&gt;ATM Messina&lt;/a&gt; le uniche informazioni relative
 alle tariffe orarie dei parcheggi in ZTL sono presenti in questa &lt;a href=&quot;http://www.atmmessina.it/altri.asp?id=5&quot; target=&quot;blank&quot;&gt;pagina&lt;/a&gt;.
Nella stessa pagina è presente anche la piantina dei lotti ZTL di seguito mostrata.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/piantinaZTL.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Primi guai all’orizzonte.&lt;/strong&gt; In calce alla &lt;a href=&quot;http://www.atmmessina.it/altri.asp?id=5&quot; target=&quot;blank&quot;&gt;pagina del sito &lt;/a&gt;
è riportato il seguente disclaimer:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Copyright C 2015 - ATM MESSINA -   E' vietata la riproduzione anche parziale.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/meme-why.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I dati quindi non possono essere usati neanche in modo parziale. In realtà l’ATM, essendo un &lt;strong&gt;ente strumentale&lt;/strong&gt; del comune,
&lt;em&gt;dovrebbe&lt;/em&gt;  rilasciare i dati con licenza aperta considerato che si tratta di dati pubblici di un ente legato ad una pubblica
amministrazione, cioè il comune di Messina.&lt;/p&gt;

&lt;p&gt;L’ATM dovrebbe seguire l’esempio di altre municipalizzate italiane  (come ad esempio del comune di &lt;a href=&quot;http://www.agenziamobilita.roma.it/it/progetti/open-data/&quot; target=&quot;blank&quot;&gt;Roma&lt;/a&gt;),
che hanno iniziato ad aprire agli sviluppatori i propri dati su traffico e mobilità, per incentivare lo sviluppo di app
in grado di trasformare le città e renderle  più &lt;strong&gt;Smart&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Tuttavia, immaginiamo per un attimo che non esista nessun copyright su questi dati, anzi immaginiamo che i dati siano rilasciati
in modalità &lt;strong&gt;Open Data&lt;/strong&gt;.  Cosa potremmo farci? In che senso i dati aperti possono essere riusati in contesti diversi
da quello di origine aumentandone il valore originale? In che senso i dati aperti possono fare da volano allo sviluppo di attività
imprenditoriali private?&lt;/p&gt;

&lt;p&gt;Per rispondere a tutte queste domande vedremo in questo post come implementare un ipotetico
scenario attraverso lo sviluppo di un’applicazione reale. Scopo di questo
esperimento è rafforzare la tesi secondo cui la pubblica amministrazione, nel rilasciare dati in modalità &lt;strong&gt;Open Data&lt;/strong&gt;
promuove l’innovazione permanente favorendo lo sviluppo economico del terzo millennio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;
&lt;em&gt;L’intero progetto, chiamato “PARKING IN MESSINA”, è da intendersi volutamente a carattere DIDATTICO, SPERIMENTALE e
assolutamente NON A SCOPO DI LUCRO.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cominciamo allora!&lt;/p&gt;

&lt;p&gt;La prima cosa che decido di fare è disegnare su openstreetmap i lotti ZTL della città di Messina.
Per fare questo scelgo di usare il tool &lt;a href=&quot;http://umap.openstreetmap.fr/it/&quot; target=&quot;blank&quot;&gt;UMAP&lt;/a&gt;,
un software libero in grado di creare mappe che fanno uso di OpenStreetMap come sfondo. Con UMAP è possibile aggiungere alla
mappa punti di interesse, marcatori, linee, poligoni, colori, icone. E’ possibile inoltre sia importare che esportare i dati nei
 formati più conosciuti (geojson, gpx, kml, osm, etc).&lt;/p&gt;

&lt;p&gt;La cosa più disarmante di UMAP è la facilità di utilizzo, praticamente a portata di bambino. Per raggiungere il mio obiettivo
ho disegnato i poligoni così come appaiono nella piantina ZTL, specificando per ciascun poligono le informazioni relative
alla tariffa oraria del lotto.
Prova a cliccare su uno dei lotti colorati.&lt;/p&gt;

&lt;h2 id=&quot;messina-piano-tariffario-ztl&quot;&gt;Messina Piano Tariffario ZTL&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://umap.openstreetmap.fr/it/map/messina-piano-tariffario-aree-ztl_49528&quot;&gt;Visualliza schermo intero&lt;/a&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;700px&quot; frameborder=&quot;0&quot; src=&quot;http://umap.openstreetmap.fr/it/map/messina-piano-tariffario-aree-ztl_49528?scaleControl=false&amp;amp;miniMap=false&amp;amp;scrollWheelZoom=false&amp;amp;zoomControl=true&amp;amp;allowEdit=false&amp;amp;moreControl=true&amp;amp;datalayersControl=true&amp;amp;onLoadPanel=undefined&amp;amp;captionBar=false&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;A questo punto posso entrare in ZTL a Messina, aprire la mappa appena creata con il mio smartphone,
selezionare il lotto nel quale si trova la mia autovettura e magicamente  apparirà la tariffa oraria da pagare.&lt;/p&gt;

&lt;p&gt;Tutti felici, tutti contenti, arrivederci e grazie?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/lol.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ma-anche-no&quot;&gt;Ma anche no!&lt;/h2&gt;

&lt;p&gt;Quando parcheggio la mia autovettura in un’area dove non conosco la tariffa ZTL, la mappa appena creata mi evita di dover
andare per strada alla ricerca del cartello stradale indicante la tariffa vigente in quella via, ma mi costringe a
selezionare manualmente la regione colorata nella mappa.
Per alcuni potrebbe bastare questo, ma dato che sono una persona moooolto &lt;strong&gt;pigra&lt;/strong&gt;, come del resto tanti informatici, il dover
pensare a dove mi trovo e selezionare l’area colorata nella mappa rappresenta uno spreco di tempo imperdonabile.
Deleghiamo all’applicazione il lavoro sporco!&lt;/p&gt;

&lt;p&gt;Per eliminare questo spreco è necessario quindi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;far capire all’applicazione la posizione del mio dispositivo mobile e&lt;/li&gt;
  &lt;li&gt;se sono all’interno della ZTL di Messina,&lt;/li&gt;
  &lt;li&gt;l’applicazione deve restituirmi le tariffe vigenti per quella via.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Procediamo per gradi.&lt;/p&gt;
&lt;h4 id=&quot;far-capire-allapplicazione-la-posizione-del-mio-dispositivo&quot;&gt;Far capire all’applicazione la posizione del mio dispositivo&lt;/h4&gt;

&lt;p&gt;Nei dispositivi con GPS, grazie alle API HTML5 di geolocalizzazione, è possibile ottenere la posizione di un utente, previo consenso dello stesso.
La funzionalità è supportata a partire dalle seguenti versioni di browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/geolocation-html5-browser-support.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il metodo da invocare per ottenere la posizione dell’utente è &lt;code class=&quot;highlighter-rouge&quot;&gt;getCurrentPosition()&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    var x = document.getElementById(&quot;demo&quot;);
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            x.innerHTML = &quot;Geolocation is not supported by this browser.&quot;;
        }
    }
    function showPosition(position) {
        x.innerHTML = &quot;Latitude: &quot; + position.coords.latitude +
        &quot;&amp;lt;br&amp;gt;Longitude: &quot; + position.coords.longitude;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In questo modo otteniamo la latitudine e la longitudine della posizione in cui si trova il dispositivo.&lt;/p&gt;

&lt;h4 id=&quot;se-sono-allinterno-della-ztl-di-messina&quot;&gt;Se sono all’interno della ZTL di Messina&lt;/h4&gt;
&lt;p&gt;Qui risiede il &lt;strong&gt;core&lt;/strong&gt; dell’applicazione. Anche qui procediamo per gradi.&lt;/p&gt;

&lt;p&gt;Prima di addentrarci nel caso specifico della ZTL di Messina dobbiamo astrarre l’obiettivo generalizzando il problema.
L’obiettivo è quindi adesso: dato un punto geografico qualsiasi, espresso tramite una latitudine e una longitudine,
stabilire se si trova all’interno di un poligono chiuso, espresso come insieme di punti geografici.&lt;/p&gt;

&lt;p&gt;Per la risoluzione di questo problema esistono in letteratura diversi &lt;a target=&quot;blank&quot; href=&quot;http://paulbourke.net/geometry/polygonmesh/&quot;&gt;algoritmi geometrici&lt;/a&gt;.
In questo contesto ho scelto di implementare in PHP la soluzione presentata da Philippe Reverdy.
Sinteticamente, l’algoritmo calcola la somma degli angoli esistenti tra il punto da valutare e ogni coppia di punti costituenti il poligono.
Se la somma è 2*pigreco il punto è &lt;strong&gt;interno&lt;/strong&gt; al poligono, se la somma è 0 il punto è &lt;strong&gt;esterno&lt;/strong&gt; al poligono.
Per maggiori informazioni fate riferimento alla pagina sopra menzionata.&lt;/p&gt;

&lt;p&gt;Ho rilasciato la libreria &lt;code class=&quot;highlighter-rouge&quot;&gt;GPSPolygon&lt;/code&gt; sul mio repository &lt;a href=&quot;https://github.com/gpirrotta/gpspolygon&quot; target=&quot;blank&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ho preparato anche una API Demo da invocare nel seguente modo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-http://www.pirrotta.it/gps-polygon-api/isPointInsidePolygon.php&quot;&gt;
**Parameters**

    latitude (ex: latitude=38.19396)
    longitude (ex: longitude=15.55599)
    polygon (ex: polygon=38.197344511074,15.556431412697;38.197129504006,15.557370185852;38.192909334811,15.55691421032;38.193706168703,15.554140806198;)

Facciamo un esempio, consideriamo il poligono avente come vertici i seguenti punti geografici:

    38.197344511074,15.556431412697;
    38.197129504006,15.557370185852;
    38.192909334811,15.55691421032;
    38.193706168703,15.554140806198;
    38.197344511074,15.556431412697

La mappa di riferimento è la città di Messina e il poligono identificato è delimitato dalle seguenti vie:
**viale Boccetta - Corso Cavour - Via Consolato del Mare - Via Garibaldi**.

![Image](/images/messina-polygon.jpg){: .center-image }

Vogliamo sapere se piazza Unione Europea, identificata con ```latitudine=38.19396``` e ```longitudine=15.55599``` si trova
all'interno del sopramenzionato poligono.

Questa l'&amp;lt;a href=&quot;http://www.pirrotta.it/gps-polygon-api/isPointInsidePolygon.php?latitude=38.19396&amp;amp;longitude=15.55599&amp;amp;polygon=38.197344511074,15.556431412697;38.197129504006,15.557370185852;38.192909334811,15.55691421032;38.193706168703,15.554140806198;38.197344511074,15.556431412697&quot; target=&quot;blank&quot;&amp;gt;URL DEMO&amp;lt;/a&amp;gt;
da invocare e questo il risultato:

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;{
    info: {
        name: “GPSPolygon tool”,
        source: “https://github.com/gpirrotta/gpspolygon”,
        license: “MIT License - http://opensource.org/licenses/MIT”,
        author: {
            name: “Giovanni Pirrotta”,
            email: “giovanni.pirrotta@gmail.com”
        }
    },
    service: {
        point: “38.19396,15.55599”,
        polygon: [
                [
                “38.197344511074”,
                “15.556431412697”
                ],
                [
                “38.197129504006”,
                “15.557370185852”
                ],
                [
                “38.192909334811”,
                “15.55691421032”
                ],
                [
                “38.193706168703”,
                “15.554140806198”
                ],
                [
                “38.197344511074”,
                “15.556431412697”
                ]
                ],
        answer: “YES”
    }
}&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
La risposta **YES** del file JSON ci indica che piazza Unione Europea si trova dentro il poligono, così come possiamo
vedere anche nella figura sottostante.

![Image](/images/inside-polygon.jpg){: .center-image }

Per maggiori informazioni e altri esempi relativi alle  **GPSPolygon DEMO API** potete fare riferimento alla
&amp;lt;a href=&quot;http://www.pirrotta.it/gps-polygon-api/&quot; target=&quot;blank&quot;&amp;gt;pagina&amp;lt;/a&amp;gt; del progetto.

Ritorniamo adesso al nostro problema originale.
Da una parte abbiamo l'algoritmo che fa al caso nostro. Il punto geografico da valutare ci viene fornito dal servizio API
di geolocalizzazione HTML5, tramite Javascript.
Da dove prendiamo invece l'insieme delle coordinate geografiche dei poligoni della ZTL di Messina?

La risposta è, ovviamente, dalla mappa creata in precedenza con il tool UMAP. (Ricordate quando  ho detto che era
possibile importare/esportare i dati di UMAP nei formati più comuni?).


![Image](/images/umap-export-json.jpg){: .center-image }

A questo punto abbiamo il file &amp;lt;a  href=&quot;/ext/ztl.json&quot; target=&quot;blank&quot;&amp;gt;GEOJSON&amp;lt;/a&amp;gt;
con tutte le coordinate geografiche delle aree ZTL disegnate con UMAP, quindi abbiamo i dati per costruirci i poligoni.

Andiamo avanti!

Dell'utente abbiamo detto di avere la posizione espressa sotto forma di coordinate geografiche, nulla però sappiamo sul nome
della via in cui si trova l'utente stesso. Per ottenere questa informazione decido di usare la libreria in
PHP &amp;lt;a href=&quot;http://geocoder-php.org/Geocoder/&quot; target=&quot;blank&quot;&amp;gt;**Geocoder**&amp;lt;/a&amp;gt;
sviluppata da &amp;lt;a href=&quot;http://williamdurand.fr/&quot; target=&quot;blank&quot;&amp;gt;William Durand &amp;lt;/a&amp;gt;.
A partire da una località qualsiasi la libreria restituisce le rispettive coordinate geografiche e viceversa,
consentendo  di scegliere &amp;lt;a href=&quot;http://geocoder-php.org/Geocoder/#providers&quot; target=&quot;blank&quot;&amp;gt;uno o più provider geografici &amp;lt;/a&amp;gt;;
 ovviamente tra i provider non poteva mancare ```OpenStreetMap```.

Il codice da usare è veramente minimo:

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&amp;lt;?
    use Geocoder\HttpAdapter\CurlHttpAdapter;
    use Geocoder\Provider\OpenStreetMapProvider;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$curl     = new CurlHttpAdapter();
$geocoder = new OpenStreetMapProvider($curl);

$results = $geocoder-&amp;gt;getReversedData(array(38.19245, 15.55608));

$street = $results[0]['streetName'];

print $street; // via San Giacomo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
A questo punto abbiamo tutti i dati:

*   la latitudine e la longitudine della posizione dell'utente;
*   il nome della via in cui si trova l'utente;
*   le coordinate di tutti i poligoni della ZTL Messina.

La logica per decidere se un punto appartiene o no ad un poligono, come già detto in precedenza, verrà
implementata utilizzando la libreria ```GPSPolygon```.

Possiamo quindi passare all'ultimo punto.

#### L'applicazione deve restituirmi le tariffe vigenti per quella via.

Vediamo adesso come dovranno essere presentate le informazioni calcolate all'utente.
Il flusso di funzionamento dell'applicazione è il seguente:

*   L'utente avvia l'APP;
*   Il GPS del dispositivo comunica la latitudine e la longitudine della posizione in cui si trova;
*   L'APP, ricevute le coordinate dell'utente, recupera la via;
*   L'APP controlla se la posizione dell'utente si trova all'interno della ZTL di Messina;
    *   In caso positivo recupera il piano tariffario per quella via;
*   L'utente visualizza sul proprio dispositivo la mappa in cui si trova, all'interno della quale un marker indicherà la sua posizione;
*   L'utente visualizza sul proprio dispositivo il nome della via in cui si trova;
*   Se la posizione dell'utente è all'interno della ZTL di Messina, esso riceve le informazioni sul piano tariffario relativo alla sua posizione;
*   Se la posizione dell'utente è all'esterno della ZTL di Messina, esso riceve l'avviso di trovarsi fuori ZTL e che il pagamento è quindi gratuito;
*   Se l'utente cambia parcheggio deve avere la possibilità di ricalcolare la tariffa senza spegnere l'APP.


Per lo sviluppo della Web-App ho deciso di usare &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://goratchet.com/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;**Ratchet**&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;, framework
particolarmente indicato per lo sviluppo rapido di prototipi di applicazioni su dispositivi mobili.

Per la visualizzazione della mappa geografica ho usato la libreria &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://openlayers.org/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;OpenLayer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; grazie alla quale, in maniera  semplice e immediata,
ho inserito la mappa e il marker della posizione dell'utente in questo modo:


``` javascript
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mapdiv&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.openlayers.org/api/OpenLayers.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OpenLayers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mapdiv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OpenLayers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Layer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OSM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lonLat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OpenLayers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LonLat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1279688&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;51.5077286&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OpenLayers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Projection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;EPSG:4326&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getProjectionObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;zoom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;markers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OpenLayers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Layer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Markers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Markers&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;markers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;markers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addMarker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OpenLayers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lonLat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCenter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lonLat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;zoom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;simulazioni&quot;&gt;Simulazioni&lt;/h2&gt;

&lt;h3 id=&quot;nexus-5-dentro-ztl&quot;&gt;Nexus 5 (dentro ZTL)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/nexus5-parking.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;nokia-lumia-520-dentro-ztl&quot;&gt;Nokia Lumia 520 (dentro ZTL)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/nokia-parking.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;iphone-5-fuori-ztl&quot;&gt;Iphone 5 (fuori ZTL)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/iphone5-parking.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;blackberry-playbook-fuori-ztl&quot;&gt;Blackberry Playbook (fuori ZTL)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/blackberry-playbook-parking.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;considerazioni-finali&quot;&gt;Considerazioni finali&lt;/h2&gt;
&lt;p&gt;L’obiettivo è stato raggiunto e la sfida è stata vinta! :-)
L’applicazione è solo una demo ma è già di grande utilità,
a dimostrazione di come sia possibile, partendo da semplici dati della pubblica amministrazione,
aumentarne il valore e creare un servizio utile per la cittadinanza, attraverso software opensource a costo zero.&lt;/p&gt;

&lt;p&gt;Sicuramente possono essere aggiunte altre funzionalità, come ad esempio le posizioni sulla mappa
degli edicolanti per l’acquisto dei gratta e sosta, la possibilità di inserire un orario di arrivo e un
orario di partenza lasciando che l’APP stessa calcoli l’ammontare totale da pagare, informazioni di contatto dell’ATM, etc…&lt;/p&gt;

&lt;p&gt;Purtroppo però, come dette sopra, i dati di partenza non sono &lt;strong&gt;Open Data&lt;/strong&gt; quindi l’applicazione non potrebbe esistere.&lt;/p&gt;

&lt;p&gt;Pertanto, mi auguro che questo esempio (che ribadisco essere a scopo &lt;em&gt;DIDATTICO&lt;/em&gt; e &lt;em&gt;NON A SCOPO DI LUCRO&lt;/em&gt;) possa servire da sprono alla governance amministrativa del comune di Messina e all’ATM,
ad innescare processi e modelli organizzativi ispirati sempre più a principi di apertura e di rilascio dei dati in modalità
&lt;strong&gt;Open Data&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;demo&quot;&gt;DEMO&lt;/h3&gt;
&lt;p&gt;La web-app &lt;strong&gt;PARKING IN MESSINA&lt;/strong&gt; è disponibile al seguente link: &lt;a href=&quot;http://www.pirrotta.it/parking-in-messina/&quot; target=&quot;blank&quot;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feedback, bug, consigli, pareri e critiche costruttive sono i benvenuti!&lt;/p&gt;

&lt;p&gt;That’s all folks! Stay tuned!&lt;/p&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">Metti che è da una vita che non aggiorno questo blog, metti che sono sostenitore da tanti anni degli Open Data e di tutto ciò che gli gira attorno, metti che finalmente sono in ferie e ho qualche giorno libero da dedicare a qualche idea che mi porto dietro da qualche mese, bene, metti insieme tutto questo :-) Ma partiamo dall’inizio, a circa un mese fa.</summary></entry><entry><title type="html">Behat-Gherkin/Mink: one translator to rule them all</title><link href="http://giovanni.pirrotta.it/blog/2015/02/17/behat-gherkin-mink-one-translator-to-rule-them-all/" rel="alternate" type="text/html" title="Behat-Gherkin/Mink: one translator to rule them all" /><published>2015-02-17T08:12:00+00:00</published><updated>2015-02-17T08:12:00+00:00</updated><id>http://giovanni.pirrotta.it/blog/2015/02/17/behat-gherkin-mink-one-translator-to-rule-them-all</id><content type="html" xml:base="http://giovanni.pirrotta.it/blog/2015/02/17/behat-gherkin-mink-one-translator-to-rule-them-all/">&lt;p&gt;Recently I started to develop my software using &lt;a href=&quot;http://it.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;Behaviour-Driven Development&lt;/a&gt; approach and, since my
 preferred programming language is PHP, I chose one of the most popular existing acceptance
 testing tool, namely &lt;a href=&quot;http://behat.org/&quot;&gt;Behat&lt;/a&gt;.&lt;/p&gt;

&lt;!--More--&gt;

&lt;p&gt;&lt;img src=&quot;/images/behat.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Behat tests a feature by executing its scenarios’ steps in a context.
It allows you to write your user stories in the natural language taking advantage of Gherkin language syntax.&lt;/p&gt;

&lt;p&gt;Afterwords I chose to write user stories in my native language and Behat helped me by providing
 Italian gherkin keyword translations. At this time it supports 62 native languages.&lt;/p&gt;

&lt;p&gt;In order to know the Gherkin keyword translation for the Italian language you must digit in console:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;behat --story-syntax --lang=it

# language: it
Funzionalità: Internal operations
  In order to stay secret
  As a secret organization
  We need to be able to erase past agents' memory

  Contesto:
    [Date|Dati|Data|Dato] there is agent A
    E there is agent B

  Scenario: Erasing agent memory
    [Date|Dati|Data|Dato] there is agent J
    E there is agent K
    Quando I erase agent K's memory
    Allora there should be agent J
    Ma there should not be agent K

  Schema dello scenario: Erasing other agents' memory
    [Date|Dati|Data|Dato] there is agent &amp;lt;agent1&amp;gt;
    E there is agent &amp;lt;agent2&amp;gt;
    Quando I erase agent &amp;lt;agent2&amp;gt;'s memory
    Allora there should be agent &amp;lt;agent1&amp;gt;
    Ma there should not be agent &amp;lt;agent2&amp;gt;

    Esempi:
      | agent1 | agent2 |
      | D      | M      |
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using behat in Web applications I like the &lt;a href=&quot;https://github.com/Behat/MinkExtension&quot;&gt;Behat extension for Mink&lt;/a&gt;,
a browser emulator abstraction layer. It hides emulator differences behind a single consistent
API and represents a bridge towards real browser emulators such as&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://mink.behat.org/en/latest/drivers/goutte.html&quot;&gt;Goutte&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mink.behat.org/en/latest/drivers/browserkit.html&quot;&gt;BrowserKit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mink.behat.org/en/latest/drivers/selenium2.html&quot;&gt;Selenium2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mink.behat.org/en/latest/drivers/zombie.html&quot;&gt;Zombie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mink.behat.org/en/latest/drivers/sahi.html&quot;&gt;Sahi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mink.behat.org/en/latest/drivers/selenium.html&quot;&gt;Selenium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mink extension supports 17 different languages so I found the Italian XLIFF file, in the source code,
 (&lt;a href=&quot;https://github.com/Behat/MinkExtension/blob/master/i18n/it.xliff&quot;&gt;see github&lt;/a&gt;) containing the patterns of Italian
 sentences recognized by the library.&lt;/p&gt;

&lt;p&gt;Apart some &lt;a href=&quot;http://blog.lepine.pro/wp-content/uploads/2012/03/behat-cheat-sheet-en.pdf&quot;&gt;English PDF cheatsheets&lt;/a&gt;
I have not found much readable native language syntax documentation about
Behat and Mink. (Let me know if you know).&lt;/p&gt;

&lt;p&gt;So, to fill the gap, I developed the &lt;a href=&quot;http://www.pirrotta.it/behat-mink-translator&quot;&gt;Behat-Gherkin/Mink Translator&lt;/a&gt;
in order to generate on the fly the native language syntax documentation that PHP developers can use for their job.&lt;/p&gt;

&lt;p&gt;Thas’all folks! Stay tuned!&lt;/p&gt;</content><author><name>Giovanni Pirrotta</name></author><summary type="html">Recently I started to develop my software using Behaviour-Driven Development approach and, since my preferred programming language is PHP, I chose one of the most popular existing acceptance testing tool, namely Behat.</summary></entry></feed>